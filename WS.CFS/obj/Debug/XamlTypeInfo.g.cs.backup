//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------



namespace WS.CFS
{
    public partial class App : global::Windows.UI.Xaml.Markup.IXamlMetadataProvider
    {
        private global::WS.CFS.WS_CFS_XamlTypeInfo.XamlTypeInfoProvider _provider;

        public global::Windows.UI.Xaml.Markup.IXamlType GetXamlType(global::System.Type type)
        {
            if(_provider == null)
            {
                _provider = new global::WS.CFS.WS_CFS_XamlTypeInfo.XamlTypeInfoProvider();
            }
            return _provider.GetXamlTypeByType(type);
        }

        public global::Windows.UI.Xaml.Markup.IXamlType GetXamlType(string fullName)
        {
            if(_provider == null)
            {
                _provider = new global::WS.CFS.WS_CFS_XamlTypeInfo.XamlTypeInfoProvider();
            }
            return _provider.GetXamlTypeByName(fullName);
        }

        public global::Windows.UI.Xaml.Markup.XmlnsDefinition[] GetXmlnsDefinitions()
        {
            return new global::Windows.UI.Xaml.Markup.XmlnsDefinition[0];
        }
    }
}

namespace WS.CFS.WS_CFS_XamlTypeInfo
{
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks", "4.0.0.0")]    
    [System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal partial class XamlTypeInfoProvider
    {
        public global::Windows.UI.Xaml.Markup.IXamlType GetXamlTypeByType(global::System.Type type)
        {
            global::Windows.UI.Xaml.Markup.IXamlType xamlType;
            if (_xamlTypeCacheByType.TryGetValue(type, out xamlType))
            {
                return xamlType;
            }
            int typeIndex = LookupTypeIndexByType(type);
            if(typeIndex != -1)
            {
                xamlType = CreateXamlType(typeIndex);
            }
            var userXamlType = xamlType as global::WS.CFS.WS_CFS_XamlTypeInfo.XamlUserType;
            if(xamlType == null || (userXamlType != null && userXamlType.IsReturnTypeStub))
            {
                global::Windows.UI.Xaml.Markup.IXamlType libXamlType = CheckOtherMetadataProvidersForType(type);
                if (libXamlType != null)
                {
                    if(libXamlType.IsConstructible || xamlType == null)
                    {
                        xamlType = libXamlType;
                    }
                }
            }
            if (xamlType != null)
            {
                _xamlTypeCacheByName.Add(xamlType.FullName, xamlType);
                _xamlTypeCacheByType.Add(xamlType.UnderlyingType, xamlType);
            }
            return xamlType;
        }

        public global::Windows.UI.Xaml.Markup.IXamlType GetXamlTypeByName(string typeName)
        {
            if (string.IsNullOrEmpty(typeName))
            {
                return null;
            }
            global::Windows.UI.Xaml.Markup.IXamlType xamlType;
            if (_xamlTypeCacheByName.TryGetValue(typeName, out xamlType))
            {
                return xamlType;
            }
            int typeIndex = LookupTypeIndexByName(typeName);
            if(typeIndex != -1)
            {
                xamlType = CreateXamlType(typeIndex);
            }
            var userXamlType = xamlType as global::WS.CFS.WS_CFS_XamlTypeInfo.XamlUserType;
            if(xamlType == null || (userXamlType != null && userXamlType.IsReturnTypeStub))
            {
                global::Windows.UI.Xaml.Markup.IXamlType libXamlType = CheckOtherMetadataProvidersForName(typeName);
                if (libXamlType != null)
                {
                    if(libXamlType.IsConstructible || xamlType == null)
                    {
                        xamlType = libXamlType;
                    }
                }
            }
            if (xamlType != null)
            {
                _xamlTypeCacheByName.Add(xamlType.FullName, xamlType);
                _xamlTypeCacheByType.Add(xamlType.UnderlyingType, xamlType);
            }
            return xamlType;
        }

        public global::Windows.UI.Xaml.Markup.IXamlMember GetMemberByLongName(string longMemberName)
        {
            if (string.IsNullOrEmpty(longMemberName))
            {
                return null;
            }
            global::Windows.UI.Xaml.Markup.IXamlMember xamlMember;
            if (_xamlMembers.TryGetValue(longMemberName, out xamlMember))
            {
                return xamlMember;
            }
            xamlMember = CreateXamlMember(longMemberName);
            if (xamlMember != null)
            {
                _xamlMembers.Add(longMemberName, xamlMember);
            }
            return xamlMember;
        }

        global::System.Collections.Generic.Dictionary<string, global::Windows.UI.Xaml.Markup.IXamlType>
                _xamlTypeCacheByName = new global::System.Collections.Generic.Dictionary<string, global::Windows.UI.Xaml.Markup.IXamlType>();

        global::System.Collections.Generic.Dictionary<global::System.Type, global::Windows.UI.Xaml.Markup.IXamlType>
                _xamlTypeCacheByType = new global::System.Collections.Generic.Dictionary<global::System.Type, global::Windows.UI.Xaml.Markup.IXamlType>();

        global::System.Collections.Generic.Dictionary<string, global::Windows.UI.Xaml.Markup.IXamlMember>
                _xamlMembers = new global::System.Collections.Generic.Dictionary<string, global::Windows.UI.Xaml.Markup.IXamlMember>();

        string[] _typeNameTable = null;
        global::System.Type[] _typeTable = null;

        private void InitTypeTables()
        {
            _typeNameTable = new string[78];
            _typeNameTable[0] = "WS.CFS.Data.FeedbackDataSource";
            _typeNameTable[1] = "Object";
            _typeNameTable[2] = "System.Collections.ObjectModel.ObservableCollection`1<WS.CFS.DataModel.Feedback>";
            _typeNameTable[3] = "System.Collections.ObjectModel.Collection`1<WS.CFS.DataModel.Feedback>";
            _typeNameTable[4] = "WS.CFS.DataModel.Feedback";
            _typeNameTable[5] = "String";
            _typeNameTable[6] = "WS.CFS.AddFeedbackPage";
            _typeNameTable[7] = "Windows.UI.Xaml.Controls.Page";
            _typeNameTable[8] = "Windows.UI.Xaml.Controls.UserControl";
            _typeNameTable[9] = "WS.CFS.Common.ObservableDictionary";
            _typeNameTable[10] = "WS.CFS.Common.NavigationHelper";
            _typeNameTable[11] = "Windows.UI.Xaml.DependencyObject";
            _typeNameTable[12] = "DevExpress.UI.Xaml.Grid.GridControl";
            _typeNameTable[13] = "DevExpress.UI.Xaml.Grid.GridControlBase";
            _typeNameTable[14] = "DevExpress.UI.Xaml.Grid.DataControlBase";
            _typeNameTable[15] = "DevExpress.Core.Native.DXControl";
            _typeNameTable[16] = "Windows.UI.Xaml.Controls.Control";
            _typeNameTable[17] = "Boolean";
            _typeNameTable[18] = "Windows.UI.Xaml.Controls.DataTemplateSelector";
            _typeNameTable[19] = "Double";
            _typeNameTable[20] = "Windows.UI.Xaml.Style";
            _typeNameTable[21] = "Windows.UI.Xaml.DataTemplate";
            _typeNameTable[22] = "DevExpress.UI.Xaml.Grid.GroupSummaryDisplayMode";
            _typeNameTable[23] = "System.Enum";
            _typeNameTable[24] = "System.ValueType";
            _typeNameTable[25] = "Int32";
            _typeNameTable[26] = "DevExpress.UI.Xaml.Grid.GridSummaryItemCollection";
            _typeNameTable[27] = "DevExpress.UI.Xaml.Grid.SummaryItemCollectionBase`1<DevExpress.UI.Xaml.Grid.GridSummaryItem>";
            _typeNameTable[28] = "DevExpress.Core.ObservableCollectionCore`1<DevExpress.UI.Xaml.Grid.GridSummaryItem>";
            _typeNameTable[29] = "System.Collections.ObjectModel.ObservableCollection`1<DevExpress.UI.Xaml.Grid.GridSummaryItem>";
            _typeNameTable[30] = "System.Collections.ObjectModel.Collection`1<DevExpress.UI.Xaml.Grid.GridSummaryItem>";
            _typeNameTable[31] = "DevExpress.UI.Xaml.Grid.GridSummaryItem";
            _typeNameTable[32] = "DevExpress.UI.Xaml.Grid.SummaryItemBase";
            _typeNameTable[33] = "DevExpress.Data.SummaryItemType";
            _typeNameTable[34] = "DevExpress.UI.Xaml.Grid.GridSummaryItemAlignment";
            _typeNameTable[35] = "DevExpress.UI.Xaml.Grid.GridColumnCollection";
            _typeNameTable[36] = "DevExpress.UI.Xaml.Grid.ColumnCollectionBase`1<DevExpress.UI.Xaml.Grid.GridColumnBase>";
            _typeNameTable[37] = "DevExpress.Core.ObservableCollectionCore`1<DevExpress.UI.Xaml.Grid.GridColumnBase>";
            _typeNameTable[38] = "System.Collections.ObjectModel.ObservableCollection`1<DevExpress.UI.Xaml.Grid.GridColumnBase>";
            _typeNameTable[39] = "System.Collections.ObjectModel.Collection`1<DevExpress.UI.Xaml.Grid.GridColumnBase>";
            _typeNameTable[40] = "DevExpress.UI.Xaml.Grid.GridColumnBase";
            _typeNameTable[41] = "DevExpress.UI.Xaml.Grid.ColumnBase";
            _typeNameTable[42] = "Windows.UI.Xaml.FrameworkElement";
            _typeNameTable[43] = "DevExpress.XtraGrid.ColumnGroupInterval";
            _typeNameTable[44] = "DevExpress.Utils.DefaultBoolean";
            _typeNameTable[45] = "Windows.UI.Xaml.HorizontalAlignment";
            _typeNameTable[46] = "DevExpress.Data.ColumnSortOrder";
            _typeNameTable[47] = "System.Type";
            _typeNameTable[48] = "DevExpress.Data.UnboundColumnType";
            _typeNameTable[49] = "DevExpress.XtraGrid.ColumnSortMode";
            _typeNameTable[50] = "DevExpress.UI.Xaml.Grid.GridColumnCommands";
            _typeNameTable[51] = "DevExpress.UI.Xaml.Grid.ColumnPosition";
            _typeNameTable[52] = "DevExpress.UI.Xaml.Grid.FilterPopupMode";
            _typeNameTable[53] = "DevExpress.UI.Xaml.Grid.HeaderPresenterType";
            _typeNameTable[54] = "System.Collections.Generic.IList`1<DevExpress.UI.Xaml.Grid.GridColumnBase>";
            _typeNameTable[55] = "DevExpress.UI.Xaml.Grid.ShowFilterPanelMode";
            _typeNameTable[56] = "DevExpress.Data.Filtering.CriteriaOperator";
            _typeNameTable[57] = "DevExpress.UI.Xaml.Grid.GridControlNavigationStyle";
            _typeNameTable[58] = "Windows.UI.Xaml.Controls.ControlTemplate";
            _typeNameTable[59] = "DevExpress.UI.Xaml.Grid.DataControlCommandsBase";
            _typeNameTable[60] = "DevExpress.UI.Xaml.Grid.MultiSelectMode";
            _typeNameTable[61] = "System.Collections.IList";
            _typeNameTable[62] = "DevExpress.UI.Xaml.Grid.ItemNavigationMode";
            _typeNameTable[63] = "System.Windows.Input.ICommand";
            _typeNameTable[64] = "Windows.UI.Xaml.Data.BindingBase";
            _typeNameTable[65] = "System.Collections.Generic.IList`1<DevExpress.UI.Xaml.Grid.GridTotalSummaryData>";
            _typeNameTable[66] = "DevExpress.UI.Xaml.Grid.GridTotalSummaryData";
            _typeNameTable[67] = "DevExpress.UI.Xaml.Grid.HeadersData";
            _typeNameTable[68] = "DevExpress.UI.Xaml.Grid.RowDataBase";
            _typeNameTable[69] = "DevExpress.UI.Xaml.Grid.TotalSummaryData";
            _typeNameTable[70] = "DevExpress.UI.Xaml.Grid.INotifyCurrentViewChanged";
            _typeNameTable[71] = "WS.CFS.FeedbackListPage";
            _typeNameTable[72] = "WS.CFS.GroupedItemsPage1";
            _typeNameTable[73] = "WS.CFS.ItemDetailPage1";
            _typeNameTable[74] = "WS.CFS.MainPage";
            _typeNameTable[75] = "WS.CFS.PreferencesSettingsFlyout";
            _typeNameTable[76] = "Windows.UI.Xaml.Controls.SettingsFlyout";
            _typeNameTable[77] = "Windows.UI.Xaml.Controls.ContentControl";

            _typeTable = new global::System.Type[78];
            _typeTable[0] = typeof(global::WS.CFS.Data.FeedbackDataSource);
            _typeTable[1] = typeof(global::System.Object);
            _typeTable[2] = typeof(global::System.Collections.ObjectModel.ObservableCollection<global::WS.CFS.DataModel.Feedback>);
            _typeTable[3] = typeof(global::System.Collections.ObjectModel.Collection<global::WS.CFS.DataModel.Feedback>);
            _typeTable[4] = typeof(global::WS.CFS.DataModel.Feedback);
            _typeTable[5] = typeof(global::System.String);
            _typeTable[6] = typeof(global::WS.CFS.AddFeedbackPage);
            _typeTable[7] = typeof(global::Windows.UI.Xaml.Controls.Page);
            _typeTable[8] = typeof(global::Windows.UI.Xaml.Controls.UserControl);
            _typeTable[9] = typeof(global::WS.CFS.Common.ObservableDictionary);
            _typeTable[10] = typeof(global::WS.CFS.Common.NavigationHelper);
            _typeTable[11] = typeof(global::Windows.UI.Xaml.DependencyObject);
            _typeTable[12] = typeof(global::DevExpress.UI.Xaml.Grid.GridControl);
            _typeTable[13] = typeof(global::DevExpress.UI.Xaml.Grid.GridControlBase);
            _typeTable[14] = typeof(global::DevExpress.UI.Xaml.Grid.DataControlBase);
            _typeTable[15] = typeof(global::DevExpress.Core.Native.DXControl);
            _typeTable[16] = typeof(global::Windows.UI.Xaml.Controls.Control);
            _typeTable[17] = typeof(global::System.Boolean);
            _typeTable[18] = typeof(global::Windows.UI.Xaml.Controls.DataTemplateSelector);
            _typeTable[19] = typeof(global::System.Double);
            _typeTable[20] = typeof(global::Windows.UI.Xaml.Style);
            _typeTable[21] = typeof(global::Windows.UI.Xaml.DataTemplate);
            _typeTable[22] = typeof(global::DevExpress.UI.Xaml.Grid.GroupSummaryDisplayMode);
            _typeTable[23] = typeof(global::System.Enum);
            _typeTable[24] = typeof(global::System.ValueType);
            _typeTable[25] = typeof(global::System.Int32);
            _typeTable[26] = typeof(global::DevExpress.UI.Xaml.Grid.GridSummaryItemCollection);
            _typeTable[27] = typeof(global::DevExpress.UI.Xaml.Grid.SummaryItemCollectionBase<global::DevExpress.UI.Xaml.Grid.GridSummaryItem>);
            _typeTable[28] = typeof(global::DevExpress.Core.ObservableCollectionCore<global::DevExpress.UI.Xaml.Grid.GridSummaryItem>);
            _typeTable[29] = typeof(global::System.Collections.ObjectModel.ObservableCollection<global::DevExpress.UI.Xaml.Grid.GridSummaryItem>);
            _typeTable[30] = typeof(global::System.Collections.ObjectModel.Collection<global::DevExpress.UI.Xaml.Grid.GridSummaryItem>);
            _typeTable[31] = typeof(global::DevExpress.UI.Xaml.Grid.GridSummaryItem);
            _typeTable[32] = typeof(global::DevExpress.UI.Xaml.Grid.SummaryItemBase);
            _typeTable[33] = typeof(global::DevExpress.Data.SummaryItemType);
            _typeTable[34] = typeof(global::DevExpress.UI.Xaml.Grid.GridSummaryItemAlignment);
            _typeTable[35] = typeof(global::DevExpress.UI.Xaml.Grid.GridColumnCollection);
            _typeTable[36] = typeof(global::DevExpress.UI.Xaml.Grid.ColumnCollectionBase<global::DevExpress.UI.Xaml.Grid.GridColumnBase>);
            _typeTable[37] = typeof(global::DevExpress.Core.ObservableCollectionCore<global::DevExpress.UI.Xaml.Grid.GridColumnBase>);
            _typeTable[38] = typeof(global::System.Collections.ObjectModel.ObservableCollection<global::DevExpress.UI.Xaml.Grid.GridColumnBase>);
            _typeTable[39] = typeof(global::System.Collections.ObjectModel.Collection<global::DevExpress.UI.Xaml.Grid.GridColumnBase>);
            _typeTable[40] = typeof(global::DevExpress.UI.Xaml.Grid.GridColumnBase);
            _typeTable[41] = typeof(global::DevExpress.UI.Xaml.Grid.ColumnBase);
            _typeTable[42] = typeof(global::Windows.UI.Xaml.FrameworkElement);
            _typeTable[43] = typeof(global::DevExpress.XtraGrid.ColumnGroupInterval);
            _typeTable[44] = typeof(global::DevExpress.Utils.DefaultBoolean);
            _typeTable[45] = typeof(global::Windows.UI.Xaml.HorizontalAlignment);
            _typeTable[46] = typeof(global::DevExpress.Data.ColumnSortOrder);
            _typeTable[47] = typeof(global::System.Type);
            _typeTable[48] = typeof(global::DevExpress.Data.UnboundColumnType);
            _typeTable[49] = typeof(global::DevExpress.XtraGrid.ColumnSortMode);
            _typeTable[50] = typeof(global::DevExpress.UI.Xaml.Grid.GridColumnCommands);
            _typeTable[51] = typeof(global::DevExpress.UI.Xaml.Grid.ColumnPosition);
            _typeTable[52] = typeof(global::DevExpress.UI.Xaml.Grid.FilterPopupMode);
            _typeTable[53] = typeof(global::DevExpress.UI.Xaml.Grid.HeaderPresenterType);
            _typeTable[54] = typeof(global::System.Collections.Generic.IList<global::DevExpress.UI.Xaml.Grid.GridColumnBase>);
            _typeTable[55] = typeof(global::DevExpress.UI.Xaml.Grid.ShowFilterPanelMode);
            _typeTable[56] = typeof(global::DevExpress.Data.Filtering.CriteriaOperator);
            _typeTable[57] = typeof(global::DevExpress.UI.Xaml.Grid.GridControlNavigationStyle);
            _typeTable[58] = typeof(global::Windows.UI.Xaml.Controls.ControlTemplate);
            _typeTable[59] = typeof(global::DevExpress.UI.Xaml.Grid.DataControlCommandsBase);
            _typeTable[60] = typeof(global::DevExpress.UI.Xaml.Grid.MultiSelectMode);
            _typeTable[61] = typeof(global::System.Collections.IList);
            _typeTable[62] = typeof(global::DevExpress.UI.Xaml.Grid.ItemNavigationMode);
            _typeTable[63] = typeof(global::System.Windows.Input.ICommand);
            _typeTable[64] = typeof(global::Windows.UI.Xaml.Data.BindingBase);
            _typeTable[65] = typeof(global::System.Collections.Generic.IList<global::DevExpress.UI.Xaml.Grid.GridTotalSummaryData>);
            _typeTable[66] = typeof(global::DevExpress.UI.Xaml.Grid.GridTotalSummaryData);
            _typeTable[67] = typeof(global::DevExpress.UI.Xaml.Grid.HeadersData);
            _typeTable[68] = typeof(global::DevExpress.UI.Xaml.Grid.RowDataBase);
            _typeTable[69] = typeof(global::DevExpress.UI.Xaml.Grid.TotalSummaryData);
            _typeTable[70] = typeof(global::DevExpress.UI.Xaml.Grid.INotifyCurrentViewChanged);
            _typeTable[71] = typeof(global::WS.CFS.FeedbackListPage);
            _typeTable[72] = typeof(global::WS.CFS.GroupedItemsPage1);
            _typeTable[73] = typeof(global::WS.CFS.ItemDetailPage1);
            _typeTable[74] = typeof(global::WS.CFS.MainPage);
            _typeTable[75] = typeof(global::WS.CFS.PreferencesSettingsFlyout);
            _typeTable[76] = typeof(global::Windows.UI.Xaml.Controls.SettingsFlyout);
            _typeTable[77] = typeof(global::Windows.UI.Xaml.Controls.ContentControl);
        }

        private int LookupTypeIndexByName(string typeName)
        {
            if (_typeNameTable == null)
            {
                InitTypeTables();
            }
            for (int i=0; i<_typeNameTable.Length; i++)
            {
                if(0 == string.CompareOrdinal(_typeNameTable[i], typeName))
                {
                    return i;
                }
            }
            return -1;
        }

        private int LookupTypeIndexByType(global::System.Type type)
        {
            if (_typeTable == null)
            {
                InitTypeTables();
            }
            for(int i=0; i<_typeTable.Length; i++)
            {
                if(type == _typeTable[i])
                {
                    return i;
                }
            }
            return -1;
        }

        private object Activate_0_FeedbackDataSource() { return new global::WS.CFS.Data.FeedbackDataSource(); }
        private object Activate_2_ObservableCollection() { return new global::System.Collections.ObjectModel.ObservableCollection<global::WS.CFS.DataModel.Feedback>(); }
        private object Activate_3_Collection() { return new global::System.Collections.ObjectModel.Collection<global::WS.CFS.DataModel.Feedback>(); }
        private object Activate_4_Feedback() { return new global::WS.CFS.DataModel.Feedback(); }
        private object Activate_6_AddFeedbackPage() { return new global::WS.CFS.AddFeedbackPage(); }
        private object Activate_9_ObservableDictionary() { return new global::WS.CFS.Common.ObservableDictionary(); }
        private object Activate_12_GridControl() { return new global::DevExpress.UI.Xaml.Grid.GridControl(); }
        private object Activate_15_DXControl() { return new global::DevExpress.Core.Native.DXControl(); }
        private object Activate_28_ObservableCollectionCore() { return new global::DevExpress.Core.ObservableCollectionCore<global::DevExpress.UI.Xaml.Grid.GridSummaryItem>(); }
        private object Activate_29_ObservableCollection() { return new global::System.Collections.ObjectModel.ObservableCollection<global::DevExpress.UI.Xaml.Grid.GridSummaryItem>(); }
        private object Activate_30_Collection() { return new global::System.Collections.ObjectModel.Collection<global::DevExpress.UI.Xaml.Grid.GridSummaryItem>(); }
        private object Activate_31_GridSummaryItem() { return new global::DevExpress.UI.Xaml.Grid.GridSummaryItem(); }
        private object Activate_37_ObservableCollectionCore() { return new global::DevExpress.Core.ObservableCollectionCore<global::DevExpress.UI.Xaml.Grid.GridColumnBase>(); }
        private object Activate_38_ObservableCollection() { return new global::System.Collections.ObjectModel.ObservableCollection<global::DevExpress.UI.Xaml.Grid.GridColumnBase>(); }
        private object Activate_39_Collection() { return new global::System.Collections.ObjectModel.Collection<global::DevExpress.UI.Xaml.Grid.GridColumnBase>(); }
        private object Activate_71_FeedbackListPage() { return new global::WS.CFS.FeedbackListPage(); }
        private object Activate_72_GroupedItemsPage1() { return new global::WS.CFS.GroupedItemsPage1(); }
        private object Activate_73_ItemDetailPage1() { return new global::WS.CFS.ItemDetailPage1(); }
        private object Activate_74_MainPage() { return new global::WS.CFS.MainPage(); }
        private object Activate_75_PreferencesSettingsFlyout() { return new global::WS.CFS.PreferencesSettingsFlyout(); }
        private void VectorAdd_2_ObservableCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::WS.CFS.DataModel.Feedback>)instance;
            var newItem = (global::WS.CFS.DataModel.Feedback)item;
            collection.Add(newItem);
        }
        private void VectorAdd_3_Collection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::WS.CFS.DataModel.Feedback>)instance;
            var newItem = (global::WS.CFS.DataModel.Feedback)item;
            collection.Add(newItem);
        }
        private void MapAdd_9_ObservableDictionary(object instance, object key, object item)
        {
            var collection = (global::System.Collections.Generic.IDictionary<global::System.String, global::System.Object>)instance;
            var newKey = (global::System.String)key;
            var newItem = (global::System.Object)item;
            collection.Add(newKey, newItem);
        }
        private void VectorAdd_26_GridSummaryItemCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::DevExpress.UI.Xaml.Grid.GridSummaryItem>)instance;
            var newItem = (global::DevExpress.UI.Xaml.Grid.GridSummaryItem)item;
            collection.Add(newItem);
        }
        private void VectorAdd_27_SummaryItemCollectionBase(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::DevExpress.UI.Xaml.Grid.GridSummaryItem>)instance;
            var newItem = (global::DevExpress.UI.Xaml.Grid.GridSummaryItem)item;
            collection.Add(newItem);
        }
        private void VectorAdd_28_ObservableCollectionCore(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::DevExpress.UI.Xaml.Grid.GridSummaryItem>)instance;
            var newItem = (global::DevExpress.UI.Xaml.Grid.GridSummaryItem)item;
            collection.Add(newItem);
        }
        private void VectorAdd_29_ObservableCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::DevExpress.UI.Xaml.Grid.GridSummaryItem>)instance;
            var newItem = (global::DevExpress.UI.Xaml.Grid.GridSummaryItem)item;
            collection.Add(newItem);
        }
        private void VectorAdd_30_Collection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::DevExpress.UI.Xaml.Grid.GridSummaryItem>)instance;
            var newItem = (global::DevExpress.UI.Xaml.Grid.GridSummaryItem)item;
            collection.Add(newItem);
        }
        private void VectorAdd_35_GridColumnCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::DevExpress.UI.Xaml.Grid.GridColumnBase>)instance;
            var newItem = (global::DevExpress.UI.Xaml.Grid.GridColumnBase)item;
            collection.Add(newItem);
        }
        private void VectorAdd_36_ColumnCollectionBase(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::DevExpress.UI.Xaml.Grid.GridColumnBase>)instance;
            var newItem = (global::DevExpress.UI.Xaml.Grid.GridColumnBase)item;
            collection.Add(newItem);
        }
        private void VectorAdd_37_ObservableCollectionCore(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::DevExpress.UI.Xaml.Grid.GridColumnBase>)instance;
            var newItem = (global::DevExpress.UI.Xaml.Grid.GridColumnBase)item;
            collection.Add(newItem);
        }
        private void VectorAdd_38_ObservableCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::DevExpress.UI.Xaml.Grid.GridColumnBase>)instance;
            var newItem = (global::DevExpress.UI.Xaml.Grid.GridColumnBase)item;
            collection.Add(newItem);
        }
        private void VectorAdd_39_Collection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::DevExpress.UI.Xaml.Grid.GridColumnBase>)instance;
            var newItem = (global::DevExpress.UI.Xaml.Grid.GridColumnBase)item;
            collection.Add(newItem);
        }
        private void VectorAdd_54_IList(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::DevExpress.UI.Xaml.Grid.GridColumnBase>)instance;
            var newItem = (global::DevExpress.UI.Xaml.Grid.GridColumnBase)item;
            collection.Add(newItem);
        }
        private void VectorAdd_65_IList(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::DevExpress.UI.Xaml.Grid.GridTotalSummaryData>)instance;
            var newItem = (global::DevExpress.UI.Xaml.Grid.GridTotalSummaryData)item;
            collection.Add(newItem);
        }

        private global::Windows.UI.Xaml.Markup.IXamlType CreateXamlType(int typeIndex)
        {
            global::WS.CFS.WS_CFS_XamlTypeInfo.XamlSystemBaseType xamlType = null;
            global::WS.CFS.WS_CFS_XamlTypeInfo.XamlUserType userType;
            string typeName = _typeNameTable[typeIndex];
            global::System.Type type = _typeTable[typeIndex];

            switch (typeIndex)
            {

            case 0:   //  WS.CFS.Data.FeedbackDataSource
                userType = new global::WS.CFS.WS_CFS_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_0_FeedbackDataSource;
                userType.AddMemberName("Feedbacks");
                xamlType = userType;
                break;

            case 1:   //  Object
                xamlType = new global::WS.CFS.WS_CFS_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 2:   //  System.Collections.ObjectModel.ObservableCollection`1<WS.CFS.DataModel.Feedback>
                userType = new global::WS.CFS.WS_CFS_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Collections.ObjectModel.Collection`1<WS.CFS.DataModel.Feedback>"));
                userType.CollectionAdd = VectorAdd_2_ObservableCollection;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 3:   //  System.Collections.ObjectModel.Collection`1<WS.CFS.DataModel.Feedback>
                userType = new global::WS.CFS.WS_CFS_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_3_Collection;
                userType.CollectionAdd = VectorAdd_3_Collection;
                xamlType = userType;
                break;

            case 4:   //  WS.CFS.DataModel.Feedback
                userType = new global::WS.CFS.WS_CFS_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_4_Feedback;
                userType.AddMemberName("Id");
                userType.AddMemberName("Title");
                userType.AddMemberName("Type");
                userType.AddMemberName("Note");
                userType.AddMemberName("Status");
                xamlType = userType;
                break;

            case 5:   //  String
                xamlType = new global::WS.CFS.WS_CFS_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 6:   //  WS.CFS.AddFeedbackPage
                userType = new global::WS.CFS.WS_CFS_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_6_AddFeedbackPage;
                userType.AddMemberName("DefaultViewModel");
                userType.AddMemberName("NavigationHelper");
                xamlType = userType;
                break;

            case 7:   //  Windows.UI.Xaml.Controls.Page
                xamlType = new global::WS.CFS.WS_CFS_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 8:   //  Windows.UI.Xaml.Controls.UserControl
                xamlType = new global::WS.CFS.WS_CFS_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 9:   //  WS.CFS.Common.ObservableDictionary
                userType = new global::WS.CFS.WS_CFS_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.DictionaryAdd = MapAdd_9_ObservableDictionary;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 10:   //  WS.CFS.Common.NavigationHelper
                userType = new global::WS.CFS.WS_CFS_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.DependencyObject"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 11:   //  Windows.UI.Xaml.DependencyObject
                xamlType = new global::WS.CFS.WS_CFS_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 12:   //  DevExpress.UI.Xaml.Grid.GridControl
                userType = new global::WS.CFS.WS_CFS_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("DevExpress.UI.Xaml.Grid.GridControlBase"));
                userType.Activator = Activate_12_GridControl;
                userType.AddMemberName("ActualItemTemplateSelector");
                userType.AddMemberName("AllowHorizontalScrollingVirtualization");
                userType.AddMemberName("ItemMinHeight");
                userType.AddMemberName("ItemContainerStyle");
                userType.AddMemberName("ItemTemplate");
                userType.AddMemberName("ItemTemplateSelector");
                userType.AddMemberName("AutoWidth");
                userType.AddMemberName("LeftDataAreaIndent");
                userType.AddMemberName("RightDataAreaIndent");
                userType.AddMemberName("HorizontalViewport");
                userType.AddMemberName("LeftGroupAreaIndent");
                userType.AddMemberName("GroupSummaryDisplayMode");
                userType.AddMemberName("GroupColumnSummaryContentStyle");
                userType.AddMemberName("AutoExpandAllGroups");
                userType.AddMemberName("AllowLiveDataShaping");
                userType.AddMemberName("IsGrouped");
                userType.AddMemberName("ActualGroupCount");
                userType.AddMemberName("GroupSummary");
                userType.AddMemberName("Columns");
                userType.AddMemberName("TotalSummary");
                xamlType = userType;
                break;

            case 13:   //  DevExpress.UI.Xaml.Grid.GridControlBase
                userType = new global::WS.CFS.WS_CFS_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("DevExpress.UI.Xaml.Grid.DataControlBase"));
                userType.AddMemberName("CurrentColumn");
                userType.AddMemberName("AllowGrouping");
                userType.AddMemberName("VisibleColumns");
                userType.AddMemberName("ShowGroupPanel");
                userType.AddMemberName("ShowGroupedColumns");
                userType.AddMemberName("GroupSummaryContentStyle");
                userType.AddMemberName("GroupSummaryItemTemplate");
                userType.AddMemberName("GroupValueTemplate");
                userType.AddMemberName("GroupValueTemplateSelector");
                xamlType = userType;
                break;

            case 14:   //  DevExpress.UI.Xaml.Grid.DataControlBase
                userType = new global::WS.CFS.WS_CFS_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("DevExpress.Core.Native.DXControl"));
                userType.AddMemberName("AutoGenerateColumns");
                userType.AddMemberName("VirtualizingCacheHeight");
                userType.AddMemberName("VirtualizingCacheWidth");
                userType.AddMemberName("ItemsSource");
                userType.AddMemberName("VisibleRowCount");
                userType.AddMemberName("ActiveEditor");
                userType.AddMemberName("ShowFilterPanelMode");
                userType.AddMemberName("ActualShowFilterPanel");
                userType.AddMemberName("FilterPanelText");
                userType.AddMemberName("AllowEditing");
                userType.AddMemberName("AllowColumnMoving");
                userType.AddMemberName("AllowColumnFiltering");
                userType.AddMemberName("IsFilterEnabled");
                userType.AddMemberName("FilterCriteria");
                userType.AddMemberName("FilterString");
                userType.AddMemberName("FixedTotalSummaryItemTemplate");
                userType.AddMemberName("AllowSorting");
                userType.AddMemberName("SelectedItemHandle");
                userType.AddMemberName("NavigationStyle");
                userType.AddMemberName("SelectedItem");
                userType.AddMemberName("CurrentItem");
                userType.AddMemberName("KeepFocusedRowOnUpdate");
                userType.AddMemberName("IsSynchronizedWithCurrentItem");
                userType.AddMemberName("FocusedBorderTemplate");
                userType.AddMemberName("AutoScrollOnSorting");
                userType.AddMemberName("ShowTotalSummary");
                userType.AddMemberName("ShowColumnHeaders");
                userType.AddMemberName("TotalSummaryContentStyle");
                userType.AddMemberName("ColumnHeaderStyle");
                userType.AddMemberName("CellStyle");
                userType.AddMemberName("TotalSummaryItemTemplate");
                userType.AddMemberName("ColumnHeaderTemplate");
                userType.AddMemberName("ColumnHeaderTemplateSelector");
                userType.AddMemberName("Commands");
                userType.AddMemberName("SummariesIgnoreNullValues");
                userType.AddMemberName("ShowFixedTotalSummary");
                userType.AddMemberName("PreserveSorting");
                userType.AddMemberName("SelectionMode");
                userType.AddMemberName("SelectedItems");
                userType.AddMemberName("ItemNavigationTargetType");
                userType.AddMemberName("ItemNavigationMode");
                userType.AddMemberName("ItemClickCommand");
                userType.AddMemberName("ItemNavigationTargetParameterBinding");
                userType.AddMemberName("FixedSummariesLeft");
                userType.AddMemberName("FixedSummariesRight");
                userType.AddMemberName("HeadersData");
                userType.AddMemberName("TotalSummaryData");
                userType.AddMemberName("CurrentGrid");
                userType.AddMemberName("CurrentViewChangedListener");
                xamlType = userType;
                break;

            case 15:   //  DevExpress.Core.Native.DXControl
                userType = new global::WS.CFS.WS_CFS_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Control"));
                userType.Activator = Activate_15_DXControl;
                userType.AddMemberName("Focusable");
                userType.AddMemberName("IsFocused");
                userType.AddMemberName("IsKeyboardFocusWithin");
                userType.AddMemberName("IsLoaded");
                userType.AddMemberName("IsMouseOver");
                userType.AddMemberName("IsTabStop");
                xamlType = userType;
                break;

            case 16:   //  Windows.UI.Xaml.Controls.Control
                xamlType = new global::WS.CFS.WS_CFS_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 17:   //  Boolean
                xamlType = new global::WS.CFS.WS_CFS_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 18:   //  Windows.UI.Xaml.Controls.DataTemplateSelector
                xamlType = new global::WS.CFS.WS_CFS_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 19:   //  Double
                xamlType = new global::WS.CFS.WS_CFS_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 20:   //  Windows.UI.Xaml.Style
                xamlType = new global::WS.CFS.WS_CFS_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 21:   //  Windows.UI.Xaml.DataTemplate
                xamlType = new global::WS.CFS.WS_CFS_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 22:   //  DevExpress.UI.Xaml.Grid.GroupSummaryDisplayMode
                userType = new global::WS.CFS.WS_CFS_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("Default", global::DevExpress.UI.Xaml.Grid.GroupSummaryDisplayMode.Default);
                userType.AddEnumValue("AlignByColumns", global::DevExpress.UI.Xaml.Grid.GroupSummaryDisplayMode.AlignByColumns);
                xamlType = userType;
                break;

            case 23:   //  System.Enum
                userType = new global::WS.CFS.WS_CFS_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.ValueType"));
                xamlType = userType;
                break;

            case 24:   //  System.ValueType
                userType = new global::WS.CFS.WS_CFS_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                xamlType = userType;
                break;

            case 25:   //  Int32
                xamlType = new global::WS.CFS.WS_CFS_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 26:   //  DevExpress.UI.Xaml.Grid.GridSummaryItemCollection
                userType = new global::WS.CFS.WS_CFS_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("DevExpress.UI.Xaml.Grid.SummaryItemCollectionBase`1<DevExpress.UI.Xaml.Grid.GridSummaryItem>"));
                userType.CollectionAdd = VectorAdd_26_GridSummaryItemCollection;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 27:   //  DevExpress.UI.Xaml.Grid.SummaryItemCollectionBase`1<DevExpress.UI.Xaml.Grid.GridSummaryItem>
                userType = new global::WS.CFS.WS_CFS_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("DevExpress.Core.ObservableCollectionCore`1<DevExpress.UI.Xaml.Grid.GridSummaryItem>"));
                userType.CollectionAdd = VectorAdd_27_SummaryItemCollectionBase;
                xamlType = userType;
                break;

            case 28:   //  DevExpress.Core.ObservableCollectionCore`1<DevExpress.UI.Xaml.Grid.GridSummaryItem>
                userType = new global::WS.CFS.WS_CFS_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Collections.ObjectModel.ObservableCollection`1<DevExpress.UI.Xaml.Grid.GridSummaryItem>"));
                userType.Activator = Activate_28_ObservableCollectionCore;
                userType.CollectionAdd = VectorAdd_28_ObservableCollectionCore;
                xamlType = userType;
                break;

            case 29:   //  System.Collections.ObjectModel.ObservableCollection`1<DevExpress.UI.Xaml.Grid.GridSummaryItem>
                userType = new global::WS.CFS.WS_CFS_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Collections.ObjectModel.Collection`1<DevExpress.UI.Xaml.Grid.GridSummaryItem>"));
                userType.Activator = Activate_29_ObservableCollection;
                userType.CollectionAdd = VectorAdd_29_ObservableCollection;
                xamlType = userType;
                break;

            case 30:   //  System.Collections.ObjectModel.Collection`1<DevExpress.UI.Xaml.Grid.GridSummaryItem>
                userType = new global::WS.CFS.WS_CFS_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_30_Collection;
                userType.CollectionAdd = VectorAdd_30_Collection;
                xamlType = userType;
                break;

            case 31:   //  DevExpress.UI.Xaml.Grid.GridSummaryItem
                userType = new global::WS.CFS.WS_CFS_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("DevExpress.UI.Xaml.Grid.SummaryItemBase"));
                userType.Activator = Activate_31_GridSummaryItem;
                xamlType = userType;
                break;

            case 32:   //  DevExpress.UI.Xaml.Grid.SummaryItemBase
                userType = new global::WS.CFS.WS_CFS_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.DependencyObject"));
                userType.AddMemberName("SummaryType");
                userType.AddMemberName("Tag");
                userType.AddMemberName("FieldName");
                userType.AddMemberName("DisplayFormat");
                userType.AddMemberName("ShowInColumn");
                userType.AddMemberName("Visible");
                userType.AddMemberName("Alignment");
                userType.AddMemberName("Caption");
                userType.AddMemberName("FixedTotalSummaryItemTemplate");
                userType.AddMemberName("IsLast");
                xamlType = userType;
                break;

            case 33:   //  DevExpress.Data.SummaryItemType
                userType = new global::WS.CFS.WS_CFS_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("Sum", global::DevExpress.Data.SummaryItemType.Sum);
                userType.AddEnumValue("Min", global::DevExpress.Data.SummaryItemType.Min);
                userType.AddEnumValue("Max", global::DevExpress.Data.SummaryItemType.Max);
                userType.AddEnumValue("Count", global::DevExpress.Data.SummaryItemType.Count);
                userType.AddEnumValue("Average", global::DevExpress.Data.SummaryItemType.Average);
                userType.AddEnumValue("Custom", global::DevExpress.Data.SummaryItemType.Custom);
                userType.AddEnumValue("None", global::DevExpress.Data.SummaryItemType.None);
                xamlType = userType;
                break;

            case 34:   //  DevExpress.UI.Xaml.Grid.GridSummaryItemAlignment
                userType = new global::WS.CFS.WS_CFS_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("Left", global::DevExpress.UI.Xaml.Grid.GridSummaryItemAlignment.Left);
                userType.AddEnumValue("Right", global::DevExpress.UI.Xaml.Grid.GridSummaryItemAlignment.Right);
                userType.AddEnumValue("Default", global::DevExpress.UI.Xaml.Grid.GridSummaryItemAlignment.Default);
                xamlType = userType;
                break;

            case 35:   //  DevExpress.UI.Xaml.Grid.GridColumnCollection
                userType = new global::WS.CFS.WS_CFS_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("DevExpress.UI.Xaml.Grid.ColumnCollectionBase`1<DevExpress.UI.Xaml.Grid.GridColumnBase>"));
                userType.CollectionAdd = VectorAdd_35_GridColumnCollection;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 36:   //  DevExpress.UI.Xaml.Grid.ColumnCollectionBase`1<DevExpress.UI.Xaml.Grid.GridColumnBase>
                userType = new global::WS.CFS.WS_CFS_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("DevExpress.Core.ObservableCollectionCore`1<DevExpress.UI.Xaml.Grid.GridColumnBase>"));
                userType.CollectionAdd = VectorAdd_36_ColumnCollectionBase;
                xamlType = userType;
                break;

            case 37:   //  DevExpress.Core.ObservableCollectionCore`1<DevExpress.UI.Xaml.Grid.GridColumnBase>
                userType = new global::WS.CFS.WS_CFS_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Collections.ObjectModel.ObservableCollection`1<DevExpress.UI.Xaml.Grid.GridColumnBase>"));
                userType.Activator = Activate_37_ObservableCollectionCore;
                userType.CollectionAdd = VectorAdd_37_ObservableCollectionCore;
                xamlType = userType;
                break;

            case 38:   //  System.Collections.ObjectModel.ObservableCollection`1<DevExpress.UI.Xaml.Grid.GridColumnBase>
                userType = new global::WS.CFS.WS_CFS_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Collections.ObjectModel.Collection`1<DevExpress.UI.Xaml.Grid.GridColumnBase>"));
                userType.Activator = Activate_38_ObservableCollection;
                userType.CollectionAdd = VectorAdd_38_ObservableCollection;
                xamlType = userType;
                break;

            case 39:   //  System.Collections.ObjectModel.Collection`1<DevExpress.UI.Xaml.Grid.GridColumnBase>
                userType = new global::WS.CFS.WS_CFS_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_39_Collection;
                userType.CollectionAdd = VectorAdd_39_Collection;
                xamlType = userType;
                break;

            case 40:   //  DevExpress.UI.Xaml.Grid.GridColumnBase
                userType = new global::WS.CFS.WS_CFS_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("DevExpress.UI.Xaml.Grid.ColumnBase"));
                userType.AddMemberName("IsGrouped");
                userType.AddMemberName("GroupInterval");
                userType.AddMemberName("GroupIndex");
                userType.AddMemberName("GroupValueTemplate");
                userType.AddMemberName("GroupValueTemplateSelector");
                userType.AddMemberName("ActualGroupValueTemplateSelector");
                userType.AddMemberName("AllowGrouping");
                userType.AddMemberName("ActualAllowGrouping");
                userType.AddMemberName("GroupColumnSummaryItemTemplate");
                userType.AddMemberName("GroupColumnSummaryContentStyle");
                xamlType = userType;
                break;

            case 41:   //  DevExpress.UI.Xaml.Grid.ColumnBase
                userType = new global::WS.CFS.WS_CFS_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.FrameworkElement"));
                userType.AddMemberName("DataControl");
                userType.AddMemberName("HorizontalHeaderContentAlignment");
                userType.AddMemberName("IsSorted");
                userType.AddMemberName("IsSortedBySummary");
                userType.AddMemberName("SortOrder");
                userType.AddMemberName("SortIndex");
                userType.AddMemberName("FieldName");
                userType.AddMemberName("FieldType");
                userType.AddMemberName("UnboundType");
                userType.AddMemberName("UnboundExpression");
                userType.AddMemberName("AllowEditing");
                userType.AddMemberName("TotalSummaryContentStyle");
                userType.AddMemberName("ActualTotalSummaryContentStyle");
                userType.AddMemberName("SortMode");
                userType.AddMemberName("CellStyle");
                userType.AddMemberName("HeaderStyle");
                userType.AddMemberName("ActualCellStyle");
                userType.AddMemberName("ActualHeaderStyle");
                userType.AddMemberName("ActualAllowColumnFiltering");
                userType.AddMemberName("HasRightSibling");
                userType.AddMemberName("HasLeftSibling");
                userType.AddMemberName("VisibleIndex");
                userType.AddMemberName("IsLast");
                userType.AddMemberName("IsFirst");
                userType.AddMemberName("Name");
                userType.AddMemberName("Tag");
                userType.AddMemberName("Commands");
                userType.AddMemberName("Header");
                userType.AddMemberName("HeaderCaption");
                userType.AddMemberName("ActualHeaderWidth");
                userType.AddMemberName("ActualDataWidth");
                userType.AddMemberName("Width");
                userType.AddMemberName("MinWidth");
                userType.AddMemberName("ActualWidth");
                userType.AddMemberName("FixedWidth");
                userType.AddMemberName("Visible");
                userType.AddMemberName("AllowSorting");
                userType.AddMemberName("ActualAllowSorting");
                userType.AddMemberName("AllowMoving");
                userType.AddMemberName("ActualAllowMoving");
                userType.AddMemberName("ColumnPosition");
                userType.AddMemberName("HeaderTemplate");
                userType.AddMemberName("HeaderTemplateSelector");
                userType.AddMemberName("ActualHeaderTemplateSelector");
                userType.AddMemberName("HasTotalSummaries");
                userType.AddMemberName("TotalSummaryText");
                userType.AddMemberName("AllowColumnFiltering");
                userType.AddMemberName("FilterPopupMode");
                userType.AddMemberName("ImmediateUpdateColumnFilter");
                userType.AddMemberName("CustomColumnFilterPopupTemplate");
                userType.AddMemberName("HeaderPresenterType");
                xamlType = userType;
                break;

            case 42:   //  Windows.UI.Xaml.FrameworkElement
                xamlType = new global::WS.CFS.WS_CFS_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 43:   //  DevExpress.XtraGrid.ColumnGroupInterval
                userType = new global::WS.CFS.WS_CFS_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("Default", global::DevExpress.XtraGrid.ColumnGroupInterval.Default);
                userType.AddEnumValue("Value", global::DevExpress.XtraGrid.ColumnGroupInterval.Value);
                userType.AddEnumValue("Date", global::DevExpress.XtraGrid.ColumnGroupInterval.Date);
                userType.AddEnumValue("DateMonth", global::DevExpress.XtraGrid.ColumnGroupInterval.DateMonth);
                userType.AddEnumValue("DateYear", global::DevExpress.XtraGrid.ColumnGroupInterval.DateYear);
                userType.AddEnumValue("DateRange", global::DevExpress.XtraGrid.ColumnGroupInterval.DateRange);
                userType.AddEnumValue("Alphabetical", global::DevExpress.XtraGrid.ColumnGroupInterval.Alphabetical);
                userType.AddEnumValue("DisplayText", global::DevExpress.XtraGrid.ColumnGroupInterval.DisplayText);
                xamlType = userType;
                break;

            case 44:   //  DevExpress.Utils.DefaultBoolean
                userType = new global::WS.CFS.WS_CFS_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("True", global::DevExpress.Utils.DefaultBoolean.True);
                userType.AddEnumValue("False", global::DevExpress.Utils.DefaultBoolean.False);
                userType.AddEnumValue("Default", global::DevExpress.Utils.DefaultBoolean.Default);
                xamlType = userType;
                break;

            case 45:   //  Windows.UI.Xaml.HorizontalAlignment
                xamlType = new global::WS.CFS.WS_CFS_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 46:   //  DevExpress.Data.ColumnSortOrder
                userType = new global::WS.CFS.WS_CFS_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("None", global::DevExpress.Data.ColumnSortOrder.None);
                userType.AddEnumValue("Ascending", global::DevExpress.Data.ColumnSortOrder.Ascending);
                userType.AddEnumValue("Descending", global::DevExpress.Data.ColumnSortOrder.Descending);
                xamlType = userType;
                break;

            case 47:   //  System.Type
                userType = new global::WS.CFS.WS_CFS_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 48:   //  DevExpress.Data.UnboundColumnType
                userType = new global::WS.CFS.WS_CFS_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("Bound", global::DevExpress.Data.UnboundColumnType.Bound);
                userType.AddEnumValue("Integer", global::DevExpress.Data.UnboundColumnType.Integer);
                userType.AddEnumValue("Decimal", global::DevExpress.Data.UnboundColumnType.Decimal);
                userType.AddEnumValue("DateTime", global::DevExpress.Data.UnboundColumnType.DateTime);
                userType.AddEnumValue("String", global::DevExpress.Data.UnboundColumnType.String);
                userType.AddEnumValue("Boolean", global::DevExpress.Data.UnboundColumnType.Boolean);
                userType.AddEnumValue("Object", global::DevExpress.Data.UnboundColumnType.Object);
                xamlType = userType;
                break;

            case 49:   //  DevExpress.XtraGrid.ColumnSortMode
                userType = new global::WS.CFS.WS_CFS_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("Default", global::DevExpress.XtraGrid.ColumnSortMode.Default);
                userType.AddEnumValue("Value", global::DevExpress.XtraGrid.ColumnSortMode.Value);
                userType.AddEnumValue("DisplayText", global::DevExpress.XtraGrid.ColumnSortMode.DisplayText);
                userType.AddEnumValue("Custom", global::DevExpress.XtraGrid.ColumnSortMode.Custom);
                xamlType = userType;
                break;

            case 50:   //  DevExpress.UI.Xaml.Grid.GridColumnCommands
                userType = new global::WS.CFS.WS_CFS_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 51:   //  DevExpress.UI.Xaml.Grid.ColumnPosition
                userType = new global::WS.CFS.WS_CFS_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("Left", global::DevExpress.UI.Xaml.Grid.ColumnPosition.Left);
                userType.AddEnumValue("Middle", global::DevExpress.UI.Xaml.Grid.ColumnPosition.Middle);
                userType.AddEnumValue("Right", global::DevExpress.UI.Xaml.Grid.ColumnPosition.Right);
                userType.AddEnumValue("Single", global::DevExpress.UI.Xaml.Grid.ColumnPosition.Single);
                userType.AddEnumValue("Standalone", global::DevExpress.UI.Xaml.Grid.ColumnPosition.Standalone);
                xamlType = userType;
                break;

            case 52:   //  DevExpress.UI.Xaml.Grid.FilterPopupMode
                userType = new global::WS.CFS.WS_CFS_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("Default", global::DevExpress.UI.Xaml.Grid.FilterPopupMode.Default);
                userType.AddEnumValue("List", global::DevExpress.UI.Xaml.Grid.FilterPopupMode.List);
                userType.AddEnumValue("Custom", global::DevExpress.UI.Xaml.Grid.FilterPopupMode.Custom);
                xamlType = userType;
                break;

            case 53:   //  DevExpress.UI.Xaml.Grid.HeaderPresenterType
                userType = new global::WS.CFS.WS_CFS_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("Headers", global::DevExpress.UI.Xaml.Grid.HeaderPresenterType.Headers);
                userType.AddEnumValue("GroupPanel", global::DevExpress.UI.Xaml.Grid.HeaderPresenterType.GroupPanel);
                userType.AddEnumValue("ColumnChooser", global::DevExpress.UI.Xaml.Grid.HeaderPresenterType.ColumnChooser);
                xamlType = userType;
                break;

            case 54:   //  System.Collections.Generic.IList`1<DevExpress.UI.Xaml.Grid.GridColumnBase>
                userType = new global::WS.CFS.WS_CFS_XamlTypeInfo.XamlUserType(this, typeName, type, null);
                userType.CollectionAdd = VectorAdd_54_IList;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 55:   //  DevExpress.UI.Xaml.Grid.ShowFilterPanelMode
                userType = new global::WS.CFS.WS_CFS_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("Default", global::DevExpress.UI.Xaml.Grid.ShowFilterPanelMode.Default);
                userType.AddEnumValue("ShowAlways", global::DevExpress.UI.Xaml.Grid.ShowFilterPanelMode.ShowAlways);
                userType.AddEnumValue("Never", global::DevExpress.UI.Xaml.Grid.ShowFilterPanelMode.Never);
                xamlType = userType;
                break;

            case 56:   //  DevExpress.Data.Filtering.CriteriaOperator
                userType = new global::WS.CFS.WS_CFS_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 57:   //  DevExpress.UI.Xaml.Grid.GridControlNavigationStyle
                userType = new global::WS.CFS.WS_CFS_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("Row", global::DevExpress.UI.Xaml.Grid.GridControlNavigationStyle.Row);
                userType.AddEnumValue("Cell", global::DevExpress.UI.Xaml.Grid.GridControlNavigationStyle.Cell);
                userType.AddEnumValue("None", global::DevExpress.UI.Xaml.Grid.GridControlNavigationStyle.None);
                xamlType = userType;
                break;

            case 58:   //  Windows.UI.Xaml.Controls.ControlTemplate
                xamlType = new global::WS.CFS.WS_CFS_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 59:   //  DevExpress.UI.Xaml.Grid.DataControlCommandsBase
                userType = new global::WS.CFS.WS_CFS_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 60:   //  DevExpress.UI.Xaml.Grid.MultiSelectMode
                userType = new global::WS.CFS.WS_CFS_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("None", global::DevExpress.UI.Xaml.Grid.MultiSelectMode.None);
                userType.AddEnumValue("Row", global::DevExpress.UI.Xaml.Grid.MultiSelectMode.Row);
                userType.AddEnumValue("RowExtended", global::DevExpress.UI.Xaml.Grid.MultiSelectMode.RowExtended);
                userType.AddEnumValue("Cell", global::DevExpress.UI.Xaml.Grid.MultiSelectMode.Cell);
                userType.AddEnumValue("CellExtended", global::DevExpress.UI.Xaml.Grid.MultiSelectMode.CellExtended);
                xamlType = userType;
                break;

            case 61:   //  System.Collections.IList
                userType = new global::WS.CFS.WS_CFS_XamlTypeInfo.XamlUserType(this, typeName, type, null);
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 62:   //  DevExpress.UI.Xaml.Grid.ItemNavigationMode
                userType = new global::WS.CFS.WS_CFS_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("Tap", global::DevExpress.UI.Xaml.Grid.ItemNavigationMode.Tap);
                userType.AddEnumValue("DoubleTap", global::DevExpress.UI.Xaml.Grid.ItemNavigationMode.DoubleTap);
                xamlType = userType;
                break;

            case 63:   //  System.Windows.Input.ICommand
                userType = new global::WS.CFS.WS_CFS_XamlTypeInfo.XamlUserType(this, typeName, type, null);
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 64:   //  Windows.UI.Xaml.Data.BindingBase
                xamlType = new global::WS.CFS.WS_CFS_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 65:   //  System.Collections.Generic.IList`1<DevExpress.UI.Xaml.Grid.GridTotalSummaryData>
                userType = new global::WS.CFS.WS_CFS_XamlTypeInfo.XamlUserType(this, typeName, type, null);
                userType.CollectionAdd = VectorAdd_65_IList;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 66:   //  DevExpress.UI.Xaml.Grid.GridTotalSummaryData
                userType = new global::WS.CFS.WS_CFS_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.AddMemberName("Item");
                userType.AddMemberName("Value");
                userType.AddMemberName("DisplayValue");
                userType.AddMemberName("Caption");
                userType.AddMemberName("Column");
                userType.AddMemberName("FixedTotalSummaryItemTemplate");
                userType.AddMemberName("DataControl");
                xamlType = userType;
                break;

            case 67:   //  DevExpress.UI.Xaml.Grid.HeadersData
                userType = new global::WS.CFS.WS_CFS_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("DevExpress.UI.Xaml.Grid.RowDataBase"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 68:   //  DevExpress.UI.Xaml.Grid.RowDataBase
                userType = new global::WS.CFS.WS_CFS_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                xamlType = userType;
                break;

            case 69:   //  DevExpress.UI.Xaml.Grid.TotalSummaryData
                userType = new global::WS.CFS.WS_CFS_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("DevExpress.UI.Xaml.Grid.RowDataBase"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 70:   //  DevExpress.UI.Xaml.Grid.INotifyCurrentViewChanged
                userType = new global::WS.CFS.WS_CFS_XamlTypeInfo.XamlUserType(this, typeName, type, null);
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 71:   //  WS.CFS.FeedbackListPage
                userType = new global::WS.CFS.WS_CFS_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_71_FeedbackListPage;
                userType.AddMemberName("DefaultViewModel");
                userType.AddMemberName("NavigationHelper");
                xamlType = userType;
                break;

            case 72:   //  WS.CFS.GroupedItemsPage1
                userType = new global::WS.CFS.WS_CFS_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_72_GroupedItemsPage1;
                userType.AddMemberName("DefaultViewModel");
                userType.AddMemberName("NavigationHelper");
                xamlType = userType;
                break;

            case 73:   //  WS.CFS.ItemDetailPage1
                userType = new global::WS.CFS.WS_CFS_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_73_ItemDetailPage1;
                userType.AddMemberName("DefaultViewModel");
                userType.AddMemberName("NavigationHelper");
                xamlType = userType;
                break;

            case 74:   //  WS.CFS.MainPage
                userType = new global::WS.CFS.WS_CFS_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_74_MainPage;
                userType.AddMemberName("DefaultViewModel");
                userType.AddMemberName("NavigationHelper");
                xamlType = userType;
                break;

            case 75:   //  WS.CFS.PreferencesSettingsFlyout
                userType = new global::WS.CFS.WS_CFS_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.SettingsFlyout"));
                userType.Activator = Activate_75_PreferencesSettingsFlyout;
                xamlType = userType;
                break;

            case 76:   //  Windows.UI.Xaml.Controls.SettingsFlyout
                xamlType = new global::WS.CFS.WS_CFS_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 77:   //  Windows.UI.Xaml.Controls.ContentControl
                xamlType = new global::WS.CFS.WS_CFS_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;
            }
            return xamlType;
        }

        private global::System.Collections.Generic.List<global::Windows.UI.Xaml.Markup.IXamlMetadataProvider> _otherProviders;
        private global::System.Collections.Generic.List<global::Windows.UI.Xaml.Markup.IXamlMetadataProvider> OtherProviders
        {
            get
            {
                if(_otherProviders == null)
                {
                    _otherProviders = new global::System.Collections.Generic.List<global::Windows.UI.Xaml.Markup.IXamlMetadataProvider>();
                    global::Windows.UI.Xaml.Markup.IXamlMetadataProvider provider;
                    provider = new global::DevExpress.Core.DevExpress_Core_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    _otherProviders.Add(provider); 
                    provider = new global::DevExpress.UI.Xaml.Controls.DevExpress_UI_Xaml_Controls_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    _otherProviders.Add(provider); 
                    provider = new global::DevExpress.UI.Xaml.Editors.DevExpress_UI_Xaml_Editors_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    _otherProviders.Add(provider); 
                    provider = new global::DevExpress.UI.Xaml.Grid.DevExpress_UI_Xaml_Grid_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    _otherProviders.Add(provider); 
                    provider = new global::DevExpress.UI.Xaml.Layout.DevExpress_UI_Xaml_Layout_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    _otherProviders.Add(provider); 
                    provider = new global::DevExpress.UI.Xaml.DevExpress_UI_Xaml_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    _otherProviders.Add(provider); 
                }
                return _otherProviders;
            }
        }

        private global::Windows.UI.Xaml.Markup.IXamlType CheckOtherMetadataProvidersForName(string typeName)
        {
            global::Windows.UI.Xaml.Markup.IXamlType xamlType = null;
            global::Windows.UI.Xaml.Markup.IXamlType foundXamlType = null;
            foreach(global::Windows.UI.Xaml.Markup.IXamlMetadataProvider xmp in OtherProviders)
            {
                xamlType = xmp.GetXamlType(typeName);
                if(xamlType != null)
                {
                    if(xamlType.IsConstructible)    // not Constructible means it might be a Return Type Stub
                    {
                        return xamlType;
                    }
                    foundXamlType = xamlType;
                }
            }
            return foundXamlType;
        }

        private global::Windows.UI.Xaml.Markup.IXamlType CheckOtherMetadataProvidersForType(global::System.Type type)
        {
            global::Windows.UI.Xaml.Markup.IXamlType xamlType = null;
            global::Windows.UI.Xaml.Markup.IXamlType foundXamlType = null;
            foreach(global::Windows.UI.Xaml.Markup.IXamlMetadataProvider xmp in OtherProviders)
            {
                xamlType = xmp.GetXamlType(type);
                if(xamlType != null)
                {
                    if(xamlType.IsConstructible)    // not Constructible means it might be a Return Type Stub
                    {
                        return xamlType;
                    }
                    foundXamlType = xamlType;
                }
            }
            return foundXamlType;
        }

        private object get_0_FeedbackDataSource_Feedbacks(object instance)
        {
            var that = (global::WS.CFS.Data.FeedbackDataSource)instance;
            return that.Feedbacks;
        }
        private object get_1_Feedback_Id(object instance)
        {
            var that = (global::WS.CFS.DataModel.Feedback)instance;
            return that.Id;
        }
        private void set_1_Feedback_Id(object instance, object Value)
        {
            var that = (global::WS.CFS.DataModel.Feedback)instance;
            that.Id = (global::System.String)Value;
        }
        private object get_2_Feedback_Title(object instance)
        {
            var that = (global::WS.CFS.DataModel.Feedback)instance;
            return that.Title;
        }
        private void set_2_Feedback_Title(object instance, object Value)
        {
            var that = (global::WS.CFS.DataModel.Feedback)instance;
            that.Title = (global::System.String)Value;
        }
        private object get_3_Feedback_Type(object instance)
        {
            var that = (global::WS.CFS.DataModel.Feedback)instance;
            return that.Type;
        }
        private void set_3_Feedback_Type(object instance, object Value)
        {
            var that = (global::WS.CFS.DataModel.Feedback)instance;
            that.Type = (global::System.String)Value;
        }
        private object get_4_Feedback_Note(object instance)
        {
            var that = (global::WS.CFS.DataModel.Feedback)instance;
            return that.Note;
        }
        private void set_4_Feedback_Note(object instance, object Value)
        {
            var that = (global::WS.CFS.DataModel.Feedback)instance;
            that.Note = (global::System.String)Value;
        }
        private object get_5_Feedback_Status(object instance)
        {
            var that = (global::WS.CFS.DataModel.Feedback)instance;
            return that.Status;
        }
        private void set_5_Feedback_Status(object instance, object Value)
        {
            var that = (global::WS.CFS.DataModel.Feedback)instance;
            that.Status = (global::System.String)Value;
        }
        private object get_6_AddFeedbackPage_DefaultViewModel(object instance)
        {
            var that = (global::WS.CFS.AddFeedbackPage)instance;
            return that.DefaultViewModel;
        }
        private object get_7_AddFeedbackPage_NavigationHelper(object instance)
        {
            var that = (global::WS.CFS.AddFeedbackPage)instance;
            return that.NavigationHelper;
        }
        private object get_8_DataControlBase_AutoGenerateColumns(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Grid.DataControlBase)instance;
            return that.AutoGenerateColumns;
        }
        private void set_8_DataControlBase_AutoGenerateColumns(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Grid.DataControlBase)instance;
            that.AutoGenerateColumns = (global::System.Boolean)Value;
        }
        private object get_9_GridControl_ActualItemTemplateSelector(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Grid.GridControl)instance;
            return that.ActualItemTemplateSelector;
        }
        private object get_10_GridControl_AllowHorizontalScrollingVirtualization(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Grid.GridControl)instance;
            return that.AllowHorizontalScrollingVirtualization;
        }
        private void set_10_GridControl_AllowHorizontalScrollingVirtualization(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Grid.GridControl)instance;
            that.AllowHorizontalScrollingVirtualization = (global::System.Boolean)Value;
        }
        private object get_11_GridControl_ItemMinHeight(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Grid.GridControl)instance;
            return that.ItemMinHeight;
        }
        private void set_11_GridControl_ItemMinHeight(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Grid.GridControl)instance;
            that.ItemMinHeight = (global::System.Double)Value;
        }
        private object get_12_GridControl_ItemContainerStyle(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Grid.GridControl)instance;
            return that.ItemContainerStyle;
        }
        private void set_12_GridControl_ItemContainerStyle(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Grid.GridControl)instance;
            that.ItemContainerStyle = (global::Windows.UI.Xaml.Style)Value;
        }
        private object get_13_GridControl_ItemTemplate(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Grid.GridControl)instance;
            return that.ItemTemplate;
        }
        private void set_13_GridControl_ItemTemplate(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Grid.GridControl)instance;
            that.ItemTemplate = (global::Windows.UI.Xaml.DataTemplate)Value;
        }
        private object get_14_GridControl_ItemTemplateSelector(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Grid.GridControl)instance;
            return that.ItemTemplateSelector;
        }
        private void set_14_GridControl_ItemTemplateSelector(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Grid.GridControl)instance;
            that.ItemTemplateSelector = (global::Windows.UI.Xaml.Controls.DataTemplateSelector)Value;
        }
        private object get_15_GridControl_AutoWidth(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Grid.GridControl)instance;
            return that.AutoWidth;
        }
        private void set_15_GridControl_AutoWidth(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Grid.GridControl)instance;
            that.AutoWidth = (global::System.Boolean)Value;
        }
        private object get_16_GridControl_LeftDataAreaIndent(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Grid.GridControl)instance;
            return that.LeftDataAreaIndent;
        }
        private void set_16_GridControl_LeftDataAreaIndent(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Grid.GridControl)instance;
            that.LeftDataAreaIndent = (global::System.Double)Value;
        }
        private object get_17_GridControl_RightDataAreaIndent(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Grid.GridControl)instance;
            return that.RightDataAreaIndent;
        }
        private void set_17_GridControl_RightDataAreaIndent(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Grid.GridControl)instance;
            that.RightDataAreaIndent = (global::System.Double)Value;
        }
        private object get_18_GridControl_HorizontalViewport(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Grid.GridControl)instance;
            return that.HorizontalViewport;
        }
        private object get_19_GridControl_LeftGroupAreaIndent(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Grid.GridControl)instance;
            return that.LeftGroupAreaIndent;
        }
        private void set_19_GridControl_LeftGroupAreaIndent(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Grid.GridControl)instance;
            that.LeftGroupAreaIndent = (global::System.Double)Value;
        }
        private object get_20_GridControl_GroupSummaryDisplayMode(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Grid.GridControl)instance;
            return that.GroupSummaryDisplayMode;
        }
        private void set_20_GridControl_GroupSummaryDisplayMode(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Grid.GridControl)instance;
            that.GroupSummaryDisplayMode = (global::DevExpress.UI.Xaml.Grid.GroupSummaryDisplayMode)Value;
        }
        private object get_21_GridControl_GroupColumnSummaryContentStyle(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Grid.GridControl)instance;
            return that.GroupColumnSummaryContentStyle;
        }
        private void set_21_GridControl_GroupColumnSummaryContentStyle(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Grid.GridControl)instance;
            that.GroupColumnSummaryContentStyle = (global::Windows.UI.Xaml.Style)Value;
        }
        private object get_22_GridControl_AutoExpandAllGroups(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Grid.GridControl)instance;
            return that.AutoExpandAllGroups;
        }
        private void set_22_GridControl_AutoExpandAllGroups(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Grid.GridControl)instance;
            that.AutoExpandAllGroups = (global::System.Boolean)Value;
        }
        private object get_23_GridControl_AllowLiveDataShaping(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Grid.GridControl)instance;
            return that.AllowLiveDataShaping;
        }
        private void set_23_GridControl_AllowLiveDataShaping(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Grid.GridControl)instance;
            that.AllowLiveDataShaping = (global::System.Boolean)Value;
        }
        private object get_24_GridControl_IsGrouped(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Grid.GridControl)instance;
            return that.IsGrouped;
        }
        private object get_25_GridControl_ActualGroupCount(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Grid.GridControl)instance;
            return that.ActualGroupCount;
        }
        private object get_26_GridControl_GroupSummary(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Grid.GridControl)instance;
            return that.GroupSummary;
        }
        private object get_27_SummaryItemBase_SummaryType(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Grid.SummaryItemBase)instance;
            return that.SummaryType;
        }
        private void set_27_SummaryItemBase_SummaryType(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Grid.SummaryItemBase)instance;
            that.SummaryType = (global::DevExpress.Data.SummaryItemType)Value;
        }
        private object get_28_SummaryItemBase_Tag(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Grid.SummaryItemBase)instance;
            return that.Tag;
        }
        private void set_28_SummaryItemBase_Tag(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Grid.SummaryItemBase)instance;
            that.Tag = (global::System.Object)Value;
        }
        private object get_29_SummaryItemBase_FieldName(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Grid.SummaryItemBase)instance;
            return that.FieldName;
        }
        private void set_29_SummaryItemBase_FieldName(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Grid.SummaryItemBase)instance;
            that.FieldName = (global::System.String)Value;
        }
        private object get_30_SummaryItemBase_DisplayFormat(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Grid.SummaryItemBase)instance;
            return that.DisplayFormat;
        }
        private void set_30_SummaryItemBase_DisplayFormat(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Grid.SummaryItemBase)instance;
            that.DisplayFormat = (global::System.String)Value;
        }
        private object get_31_SummaryItemBase_ShowInColumn(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Grid.SummaryItemBase)instance;
            return that.ShowInColumn;
        }
        private void set_31_SummaryItemBase_ShowInColumn(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Grid.SummaryItemBase)instance;
            that.ShowInColumn = (global::System.String)Value;
        }
        private object get_32_SummaryItemBase_Visible(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Grid.SummaryItemBase)instance;
            return that.Visible;
        }
        private void set_32_SummaryItemBase_Visible(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Grid.SummaryItemBase)instance;
            that.Visible = (global::System.Boolean)Value;
        }
        private object get_33_SummaryItemBase_Alignment(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Grid.SummaryItemBase)instance;
            return that.Alignment;
        }
        private void set_33_SummaryItemBase_Alignment(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Grid.SummaryItemBase)instance;
            that.Alignment = (global::DevExpress.UI.Xaml.Grid.GridSummaryItemAlignment)Value;
        }
        private object get_34_SummaryItemBase_Caption(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Grid.SummaryItemBase)instance;
            return that.Caption;
        }
        private void set_34_SummaryItemBase_Caption(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Grid.SummaryItemBase)instance;
            that.Caption = (global::System.String)Value;
        }
        private object get_35_SummaryItemBase_FixedTotalSummaryItemTemplate(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Grid.SummaryItemBase)instance;
            return that.FixedTotalSummaryItemTemplate;
        }
        private void set_35_SummaryItemBase_FixedTotalSummaryItemTemplate(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Grid.SummaryItemBase)instance;
            that.FixedTotalSummaryItemTemplate = (global::Windows.UI.Xaml.DataTemplate)Value;
        }
        private object get_36_SummaryItemBase_IsLast(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Grid.SummaryItemBase)instance;
            return that.IsLast;
        }
        private void set_36_SummaryItemBase_IsLast(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Grid.SummaryItemBase)instance;
            that.IsLast = (global::System.Boolean)Value;
        }
        private object get_37_GridControl_Columns(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Grid.GridControl)instance;
            return that.Columns;
        }
        private object get_38_GridColumnBase_IsGrouped(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Grid.GridColumnBase)instance;
            return that.IsGrouped;
        }
        private object get_39_GridColumnBase_GroupInterval(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Grid.GridColumnBase)instance;
            return that.GroupInterval;
        }
        private void set_39_GridColumnBase_GroupInterval(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Grid.GridColumnBase)instance;
            that.GroupInterval = (global::DevExpress.XtraGrid.ColumnGroupInterval)Value;
        }
        private object get_40_GridColumnBase_GroupIndex(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Grid.GridColumnBase)instance;
            return that.GroupIndex;
        }
        private void set_40_GridColumnBase_GroupIndex(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Grid.GridColumnBase)instance;
            that.GroupIndex = (global::System.Int32)Value;
        }
        private object get_41_GridColumnBase_GroupValueTemplate(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Grid.GridColumnBase)instance;
            return that.GroupValueTemplate;
        }
        private void set_41_GridColumnBase_GroupValueTemplate(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Grid.GridColumnBase)instance;
            that.GroupValueTemplate = (global::Windows.UI.Xaml.DataTemplate)Value;
        }
        private object get_42_GridColumnBase_GroupValueTemplateSelector(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Grid.GridColumnBase)instance;
            return that.GroupValueTemplateSelector;
        }
        private void set_42_GridColumnBase_GroupValueTemplateSelector(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Grid.GridColumnBase)instance;
            that.GroupValueTemplateSelector = (global::Windows.UI.Xaml.Controls.DataTemplateSelector)Value;
        }
        private object get_43_GridColumnBase_ActualGroupValueTemplateSelector(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Grid.GridColumnBase)instance;
            return that.ActualGroupValueTemplateSelector;
        }
        private object get_44_GridColumnBase_AllowGrouping(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Grid.GridColumnBase)instance;
            return that.AllowGrouping;
        }
        private void set_44_GridColumnBase_AllowGrouping(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Grid.GridColumnBase)instance;
            that.AllowGrouping = (global::DevExpress.Utils.DefaultBoolean)Value;
        }
        private object get_45_GridColumnBase_ActualAllowGrouping(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Grid.GridColumnBase)instance;
            return that.ActualAllowGrouping;
        }
        private object get_46_GridColumnBase_GroupColumnSummaryItemTemplate(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Grid.GridColumnBase)instance;
            return that.GroupColumnSummaryItemTemplate;
        }
        private void set_46_GridColumnBase_GroupColumnSummaryItemTemplate(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Grid.GridColumnBase)instance;
            that.GroupColumnSummaryItemTemplate = (global::Windows.UI.Xaml.DataTemplate)Value;
        }
        private object get_47_GridColumnBase_GroupColumnSummaryContentStyle(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Grid.GridColumnBase)instance;
            return that.GroupColumnSummaryContentStyle;
        }
        private void set_47_GridColumnBase_GroupColumnSummaryContentStyle(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Grid.GridColumnBase)instance;
            that.GroupColumnSummaryContentStyle = (global::Windows.UI.Xaml.Style)Value;
        }
        private object get_48_ColumnBase_DataControl(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Grid.ColumnBase)instance;
            return that.DataControl;
        }
        private object get_49_ColumnBase_HorizontalHeaderContentAlignment(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Grid.ColumnBase)instance;
            return that.HorizontalHeaderContentAlignment;
        }
        private void set_49_ColumnBase_HorizontalHeaderContentAlignment(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Grid.ColumnBase)instance;
            that.HorizontalHeaderContentAlignment = (global::Windows.UI.Xaml.HorizontalAlignment)Value;
        }
        private object get_50_ColumnBase_IsSorted(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Grid.ColumnBase)instance;
            return that.IsSorted;
        }
        private object get_51_ColumnBase_IsSortedBySummary(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Grid.ColumnBase)instance;
            return that.IsSortedBySummary;
        }
        private object get_52_ColumnBase_SortOrder(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Grid.ColumnBase)instance;
            return that.SortOrder;
        }
        private void set_52_ColumnBase_SortOrder(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Grid.ColumnBase)instance;
            that.SortOrder = (global::DevExpress.Data.ColumnSortOrder)Value;
        }
        private object get_53_ColumnBase_SortIndex(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Grid.ColumnBase)instance;
            return that.SortIndex;
        }
        private void set_53_ColumnBase_SortIndex(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Grid.ColumnBase)instance;
            that.SortIndex = (global::System.Int32)Value;
        }
        private object get_54_ColumnBase_FieldName(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Grid.ColumnBase)instance;
            return that.FieldName;
        }
        private void set_54_ColumnBase_FieldName(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Grid.ColumnBase)instance;
            that.FieldName = (global::System.String)Value;
        }
        private object get_55_ColumnBase_FieldType(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Grid.ColumnBase)instance;
            return that.FieldType;
        }
        private object get_56_ColumnBase_UnboundType(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Grid.ColumnBase)instance;
            return that.UnboundType;
        }
        private void set_56_ColumnBase_UnboundType(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Grid.ColumnBase)instance;
            that.UnboundType = (global::DevExpress.Data.UnboundColumnType)Value;
        }
        private object get_57_ColumnBase_UnboundExpression(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Grid.ColumnBase)instance;
            return that.UnboundExpression;
        }
        private void set_57_ColumnBase_UnboundExpression(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Grid.ColumnBase)instance;
            that.UnboundExpression = (global::System.String)Value;
        }
        private object get_58_ColumnBase_AllowEditing(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Grid.ColumnBase)instance;
            return that.AllowEditing;
        }
        private void set_58_ColumnBase_AllowEditing(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Grid.ColumnBase)instance;
            that.AllowEditing = (global::DevExpress.Utils.DefaultBoolean)Value;
        }
        private object get_59_ColumnBase_TotalSummaryContentStyle(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Grid.ColumnBase)instance;
            return that.TotalSummaryContentStyle;
        }
        private void set_59_ColumnBase_TotalSummaryContentStyle(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Grid.ColumnBase)instance;
            that.TotalSummaryContentStyle = (global::Windows.UI.Xaml.Style)Value;
        }
        private object get_60_ColumnBase_ActualTotalSummaryContentStyle(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Grid.ColumnBase)instance;
            return that.ActualTotalSummaryContentStyle;
        }
        private object get_61_ColumnBase_SortMode(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Grid.ColumnBase)instance;
            return that.SortMode;
        }
        private void set_61_ColumnBase_SortMode(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Grid.ColumnBase)instance;
            that.SortMode = (global::DevExpress.XtraGrid.ColumnSortMode)Value;
        }
        private object get_62_ColumnBase_CellStyle(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Grid.ColumnBase)instance;
            return that.CellStyle;
        }
        private void set_62_ColumnBase_CellStyle(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Grid.ColumnBase)instance;
            that.CellStyle = (global::Windows.UI.Xaml.Style)Value;
        }
        private object get_63_ColumnBase_HeaderStyle(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Grid.ColumnBase)instance;
            return that.HeaderStyle;
        }
        private void set_63_ColumnBase_HeaderStyle(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Grid.ColumnBase)instance;
            that.HeaderStyle = (global::Windows.UI.Xaml.Style)Value;
        }
        private object get_64_ColumnBase_ActualCellStyle(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Grid.ColumnBase)instance;
            return that.ActualCellStyle;
        }
        private object get_65_ColumnBase_ActualHeaderStyle(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Grid.ColumnBase)instance;
            return that.ActualHeaderStyle;
        }
        private object get_66_ColumnBase_ActualAllowColumnFiltering(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Grid.ColumnBase)instance;
            return that.ActualAllowColumnFiltering;
        }
        private object get_67_ColumnBase_HasRightSibling(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Grid.ColumnBase)instance;
            return that.HasRightSibling;
        }
        private void set_67_ColumnBase_HasRightSibling(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Grid.ColumnBase)instance;
            that.HasRightSibling = (global::System.Boolean)Value;
        }
        private object get_68_ColumnBase_HasLeftSibling(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Grid.ColumnBase)instance;
            return that.HasLeftSibling;
        }
        private void set_68_ColumnBase_HasLeftSibling(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Grid.ColumnBase)instance;
            that.HasLeftSibling = (global::System.Boolean)Value;
        }
        private object get_69_ColumnBase_VisibleIndex(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Grid.ColumnBase)instance;
            return that.VisibleIndex;
        }
        private void set_69_ColumnBase_VisibleIndex(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Grid.ColumnBase)instance;
            that.VisibleIndex = (global::System.Int32)Value;
        }
        private object get_70_ColumnBase_IsLast(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Grid.ColumnBase)instance;
            return that.IsLast;
        }
        private object get_71_ColumnBase_IsFirst(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Grid.ColumnBase)instance;
            return that.IsFirst;
        }
        private object get_72_ColumnBase_Name(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Grid.ColumnBase)instance;
            return that.Name;
        }
        private void set_72_ColumnBase_Name(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Grid.ColumnBase)instance;
            that.Name = (global::System.String)Value;
        }
        private object get_73_ColumnBase_Tag(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Grid.ColumnBase)instance;
            return that.Tag;
        }
        private void set_73_ColumnBase_Tag(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Grid.ColumnBase)instance;
            that.Tag = (global::System.Object)Value;
        }
        private object get_74_ColumnBase_Commands(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Grid.ColumnBase)instance;
            return that.Commands;
        }
        private object get_75_ColumnBase_Header(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Grid.ColumnBase)instance;
            return that.Header;
        }
        private void set_75_ColumnBase_Header(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Grid.ColumnBase)instance;
            that.Header = (global::System.Object)Value;
        }
        private object get_76_ColumnBase_HeaderCaption(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Grid.ColumnBase)instance;
            return that.HeaderCaption;
        }
        private object get_77_ColumnBase_ActualHeaderWidth(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Grid.ColumnBase)instance;
            return that.ActualHeaderWidth;
        }
        private object get_78_ColumnBase_ActualDataWidth(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Grid.ColumnBase)instance;
            return that.ActualDataWidth;
        }
        private object get_79_ColumnBase_Width(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Grid.ColumnBase)instance;
            return that.Width;
        }
        private void set_79_ColumnBase_Width(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Grid.ColumnBase)instance;
            that.Width = (global::System.Double)Value;
        }
        private object get_80_ColumnBase_MinWidth(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Grid.ColumnBase)instance;
            return that.MinWidth;
        }
        private void set_80_ColumnBase_MinWidth(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Grid.ColumnBase)instance;
            that.MinWidth = (global::System.Double)Value;
        }
        private object get_81_ColumnBase_ActualWidth(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Grid.ColumnBase)instance;
            return that.ActualWidth;
        }
        private object get_82_ColumnBase_FixedWidth(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Grid.ColumnBase)instance;
            return that.FixedWidth;
        }
        private void set_82_ColumnBase_FixedWidth(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Grid.ColumnBase)instance;
            that.FixedWidth = (global::System.Boolean)Value;
        }
        private object get_83_ColumnBase_Visible(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Grid.ColumnBase)instance;
            return that.Visible;
        }
        private void set_83_ColumnBase_Visible(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Grid.ColumnBase)instance;
            that.Visible = (global::System.Boolean)Value;
        }
        private object get_84_ColumnBase_AllowSorting(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Grid.ColumnBase)instance;
            return that.AllowSorting;
        }
        private void set_84_ColumnBase_AllowSorting(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Grid.ColumnBase)instance;
            that.AllowSorting = (global::DevExpress.Utils.DefaultBoolean)Value;
        }
        private object get_85_ColumnBase_ActualAllowSorting(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Grid.ColumnBase)instance;
            return that.ActualAllowSorting;
        }
        private object get_86_ColumnBase_AllowMoving(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Grid.ColumnBase)instance;
            return that.AllowMoving;
        }
        private void set_86_ColumnBase_AllowMoving(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Grid.ColumnBase)instance;
            that.AllowMoving = (global::DevExpress.Utils.DefaultBoolean)Value;
        }
        private object get_87_ColumnBase_ActualAllowMoving(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Grid.ColumnBase)instance;
            return that.ActualAllowMoving;
        }
        private object get_88_ColumnBase_ColumnPosition(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Grid.ColumnBase)instance;
            return that.ColumnPosition;
        }
        private void set_88_ColumnBase_ColumnPosition(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Grid.ColumnBase)instance;
            that.ColumnPosition = (global::DevExpress.UI.Xaml.Grid.ColumnPosition)Value;
        }
        private object get_89_ColumnBase_HeaderTemplate(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Grid.ColumnBase)instance;
            return that.HeaderTemplate;
        }
        private void set_89_ColumnBase_HeaderTemplate(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Grid.ColumnBase)instance;
            that.HeaderTemplate = (global::Windows.UI.Xaml.DataTemplate)Value;
        }
        private object get_90_ColumnBase_HeaderTemplateSelector(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Grid.ColumnBase)instance;
            return that.HeaderTemplateSelector;
        }
        private void set_90_ColumnBase_HeaderTemplateSelector(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Grid.ColumnBase)instance;
            that.HeaderTemplateSelector = (global::Windows.UI.Xaml.Controls.DataTemplateSelector)Value;
        }
        private object get_91_ColumnBase_ActualHeaderTemplateSelector(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Grid.ColumnBase)instance;
            return that.ActualHeaderTemplateSelector;
        }
        private object get_92_ColumnBase_HasTotalSummaries(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Grid.ColumnBase)instance;
            return that.HasTotalSummaries;
        }
        private object get_93_ColumnBase_TotalSummaryText(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Grid.ColumnBase)instance;
            return that.TotalSummaryText;
        }
        private object get_94_ColumnBase_AllowColumnFiltering(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Grid.ColumnBase)instance;
            return that.AllowColumnFiltering;
        }
        private void set_94_ColumnBase_AllowColumnFiltering(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Grid.ColumnBase)instance;
            that.AllowColumnFiltering = (global::DevExpress.Utils.DefaultBoolean)Value;
        }
        private object get_95_ColumnBase_FilterPopupMode(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Grid.ColumnBase)instance;
            return that.FilterPopupMode;
        }
        private void set_95_ColumnBase_FilterPopupMode(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Grid.ColumnBase)instance;
            that.FilterPopupMode = (global::DevExpress.UI.Xaml.Grid.FilterPopupMode)Value;
        }
        private object get_96_ColumnBase_ImmediateUpdateColumnFilter(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Grid.ColumnBase)instance;
            return that.ImmediateUpdateColumnFilter;
        }
        private void set_96_ColumnBase_ImmediateUpdateColumnFilter(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Grid.ColumnBase)instance;
            that.ImmediateUpdateColumnFilter = (global::System.Boolean)Value;
        }
        private object get_97_ColumnBase_CustomColumnFilterPopupTemplate(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Grid.ColumnBase)instance;
            return that.CustomColumnFilterPopupTemplate;
        }
        private void set_97_ColumnBase_CustomColumnFilterPopupTemplate(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Grid.ColumnBase)instance;
            that.CustomColumnFilterPopupTemplate = (global::Windows.UI.Xaml.DataTemplate)Value;
        }
        private object get_98_ColumnBase_HeaderPresenterType(object instance)
        {
            return global::DevExpress.UI.Xaml.Grid.ColumnBase.GetHeaderPresenterType((global::Windows.UI.Xaml.DependencyObject)instance);
        }
        private void set_98_ColumnBase_HeaderPresenterType(object instance, object Value)
        {
            global::DevExpress.UI.Xaml.Grid.ColumnBase.SetHeaderPresenterType((global::Windows.UI.Xaml.DependencyObject)instance, (global::DevExpress.UI.Xaml.Grid.HeaderPresenterType)Value);
        }
        private object get_99_GridControl_TotalSummary(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Grid.GridControl)instance;
            return that.TotalSummary;
        }
        private object get_100_GridControlBase_CurrentColumn(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Grid.GridControlBase)instance;
            return that.CurrentColumn;
        }
        private void set_100_GridControlBase_CurrentColumn(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Grid.GridControlBase)instance;
            that.CurrentColumn = (global::DevExpress.UI.Xaml.Grid.GridColumnBase)Value;
        }
        private object get_101_GridControlBase_AllowGrouping(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Grid.GridControlBase)instance;
            return that.AllowGrouping;
        }
        private void set_101_GridControlBase_AllowGrouping(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Grid.GridControlBase)instance;
            that.AllowGrouping = (global::System.Boolean)Value;
        }
        private object get_102_GridControlBase_VisibleColumns(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Grid.GridControlBase)instance;
            return that.VisibleColumns;
        }
        private object get_103_GridControlBase_ShowGroupPanel(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Grid.GridControlBase)instance;
            return that.ShowGroupPanel;
        }
        private void set_103_GridControlBase_ShowGroupPanel(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Grid.GridControlBase)instance;
            that.ShowGroupPanel = (global::DevExpress.Utils.DefaultBoolean)Value;
        }
        private object get_104_GridControlBase_ShowGroupedColumns(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Grid.GridControlBase)instance;
            return that.ShowGroupedColumns;
        }
        private void set_104_GridControlBase_ShowGroupedColumns(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Grid.GridControlBase)instance;
            that.ShowGroupedColumns = (global::System.Boolean)Value;
        }
        private object get_105_GridControlBase_GroupSummaryContentStyle(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Grid.GridControlBase)instance;
            return that.GroupSummaryContentStyle;
        }
        private void set_105_GridControlBase_GroupSummaryContentStyle(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Grid.GridControlBase)instance;
            that.GroupSummaryContentStyle = (global::Windows.UI.Xaml.Style)Value;
        }
        private object get_106_GridControlBase_GroupSummaryItemTemplate(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Grid.GridControlBase)instance;
            return that.GroupSummaryItemTemplate;
        }
        private void set_106_GridControlBase_GroupSummaryItemTemplate(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Grid.GridControlBase)instance;
            that.GroupSummaryItemTemplate = (global::Windows.UI.Xaml.DataTemplate)Value;
        }
        private object get_107_GridControlBase_GroupValueTemplate(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Grid.GridControlBase)instance;
            return that.GroupValueTemplate;
        }
        private void set_107_GridControlBase_GroupValueTemplate(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Grid.GridControlBase)instance;
            that.GroupValueTemplate = (global::Windows.UI.Xaml.DataTemplate)Value;
        }
        private object get_108_GridControlBase_GroupValueTemplateSelector(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Grid.GridControlBase)instance;
            return that.GroupValueTemplateSelector;
        }
        private void set_108_GridControlBase_GroupValueTemplateSelector(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Grid.GridControlBase)instance;
            that.GroupValueTemplateSelector = (global::Windows.UI.Xaml.Controls.DataTemplateSelector)Value;
        }
        private object get_109_DataControlBase_VirtualizingCacheHeight(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Grid.DataControlBase)instance;
            return that.VirtualizingCacheHeight;
        }
        private void set_109_DataControlBase_VirtualizingCacheHeight(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Grid.DataControlBase)instance;
            that.VirtualizingCacheHeight = (global::System.Double)Value;
        }
        private object get_110_DataControlBase_VirtualizingCacheWidth(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Grid.DataControlBase)instance;
            return that.VirtualizingCacheWidth;
        }
        private void set_110_DataControlBase_VirtualizingCacheWidth(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Grid.DataControlBase)instance;
            that.VirtualizingCacheWidth = (global::System.Double)Value;
        }
        private object get_111_DataControlBase_ItemsSource(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Grid.DataControlBase)instance;
            return that.ItemsSource;
        }
        private void set_111_DataControlBase_ItemsSource(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Grid.DataControlBase)instance;
            that.ItemsSource = (global::System.Object)Value;
        }
        private object get_112_DataControlBase_VisibleRowCount(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Grid.DataControlBase)instance;
            return that.VisibleRowCount;
        }
        private object get_113_DataControlBase_ActiveEditor(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Grid.DataControlBase)instance;
            return that.ActiveEditor;
        }
        private object get_114_DataControlBase_ShowFilterPanelMode(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Grid.DataControlBase)instance;
            return that.ShowFilterPanelMode;
        }
        private void set_114_DataControlBase_ShowFilterPanelMode(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Grid.DataControlBase)instance;
            that.ShowFilterPanelMode = (global::DevExpress.UI.Xaml.Grid.ShowFilterPanelMode)Value;
        }
        private object get_115_DataControlBase_ActualShowFilterPanel(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Grid.DataControlBase)instance;
            return that.ActualShowFilterPanel;
        }
        private object get_116_DataControlBase_FilterPanelText(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Grid.DataControlBase)instance;
            return that.FilterPanelText;
        }
        private object get_117_DataControlBase_AllowEditing(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Grid.DataControlBase)instance;
            return that.AllowEditing;
        }
        private void set_117_DataControlBase_AllowEditing(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Grid.DataControlBase)instance;
            that.AllowEditing = (global::System.Boolean)Value;
        }
        private object get_118_DataControlBase_AllowColumnMoving(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Grid.DataControlBase)instance;
            return that.AllowColumnMoving;
        }
        private void set_118_DataControlBase_AllowColumnMoving(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Grid.DataControlBase)instance;
            that.AllowColumnMoving = (global::System.Boolean)Value;
        }
        private object get_119_DataControlBase_AllowColumnFiltering(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Grid.DataControlBase)instance;
            return that.AllowColumnFiltering;
        }
        private void set_119_DataControlBase_AllowColumnFiltering(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Grid.DataControlBase)instance;
            that.AllowColumnFiltering = (global::System.Boolean)Value;
        }
        private object get_120_DataControlBase_IsFilterEnabled(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Grid.DataControlBase)instance;
            return that.IsFilterEnabled;
        }
        private void set_120_DataControlBase_IsFilterEnabled(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Grid.DataControlBase)instance;
            that.IsFilterEnabled = (global::System.Boolean)Value;
        }
        private object get_121_DataControlBase_FilterCriteria(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Grid.DataControlBase)instance;
            return that.FilterCriteria;
        }
        private void set_121_DataControlBase_FilterCriteria(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Grid.DataControlBase)instance;
            that.FilterCriteria = (global::DevExpress.Data.Filtering.CriteriaOperator)Value;
        }
        private object get_122_DataControlBase_FilterString(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Grid.DataControlBase)instance;
            return that.FilterString;
        }
        private void set_122_DataControlBase_FilterString(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Grid.DataControlBase)instance;
            that.FilterString = (global::System.String)Value;
        }
        private object get_123_DataControlBase_FixedTotalSummaryItemTemplate(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Grid.DataControlBase)instance;
            return that.FixedTotalSummaryItemTemplate;
        }
        private void set_123_DataControlBase_FixedTotalSummaryItemTemplate(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Grid.DataControlBase)instance;
            that.FixedTotalSummaryItemTemplate = (global::Windows.UI.Xaml.DataTemplate)Value;
        }
        private object get_124_DataControlBase_AllowSorting(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Grid.DataControlBase)instance;
            return that.AllowSorting;
        }
        private void set_124_DataControlBase_AllowSorting(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Grid.DataControlBase)instance;
            that.AllowSorting = (global::System.Boolean)Value;
        }
        private object get_125_DataControlBase_SelectedItemHandle(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Grid.DataControlBase)instance;
            return that.SelectedItemHandle;
        }
        private void set_125_DataControlBase_SelectedItemHandle(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Grid.DataControlBase)instance;
            that.SelectedItemHandle = (global::System.Int32)Value;
        }
        private object get_126_DataControlBase_NavigationStyle(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Grid.DataControlBase)instance;
            return that.NavigationStyle;
        }
        private void set_126_DataControlBase_NavigationStyle(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Grid.DataControlBase)instance;
            that.NavigationStyle = (global::DevExpress.UI.Xaml.Grid.GridControlNavigationStyle)Value;
        }
        private object get_127_DataControlBase_SelectedItem(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Grid.DataControlBase)instance;
            return that.SelectedItem;
        }
        private void set_127_DataControlBase_SelectedItem(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Grid.DataControlBase)instance;
            that.SelectedItem = (global::System.Object)Value;
        }
        private object get_128_DataControlBase_CurrentItem(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Grid.DataControlBase)instance;
            return that.CurrentItem;
        }
        private void set_128_DataControlBase_CurrentItem(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Grid.DataControlBase)instance;
            that.CurrentItem = (global::System.Object)Value;
        }
        private object get_129_DataControlBase_KeepFocusedRowOnUpdate(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Grid.DataControlBase)instance;
            return that.KeepFocusedRowOnUpdate;
        }
        private void set_129_DataControlBase_KeepFocusedRowOnUpdate(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Grid.DataControlBase)instance;
            that.KeepFocusedRowOnUpdate = (global::System.Boolean)Value;
        }
        private object get_130_DataControlBase_IsSynchronizedWithCurrentItem(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Grid.DataControlBase)instance;
            return that.IsSynchronizedWithCurrentItem;
        }
        private void set_130_DataControlBase_IsSynchronizedWithCurrentItem(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Grid.DataControlBase)instance;
            that.IsSynchronizedWithCurrentItem = (global::System.Boolean)Value;
        }
        private object get_131_DataControlBase_FocusedBorderTemplate(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Grid.DataControlBase)instance;
            return that.FocusedBorderTemplate;
        }
        private void set_131_DataControlBase_FocusedBorderTemplate(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Grid.DataControlBase)instance;
            that.FocusedBorderTemplate = (global::Windows.UI.Xaml.Controls.ControlTemplate)Value;
        }
        private object get_132_DataControlBase_AutoScrollOnSorting(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Grid.DataControlBase)instance;
            return that.AutoScrollOnSorting;
        }
        private void set_132_DataControlBase_AutoScrollOnSorting(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Grid.DataControlBase)instance;
            that.AutoScrollOnSorting = (global::System.Boolean)Value;
        }
        private object get_133_DataControlBase_ShowTotalSummary(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Grid.DataControlBase)instance;
            return that.ShowTotalSummary;
        }
        private void set_133_DataControlBase_ShowTotalSummary(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Grid.DataControlBase)instance;
            that.ShowTotalSummary = (global::System.Boolean)Value;
        }
        private object get_134_DataControlBase_ShowColumnHeaders(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Grid.DataControlBase)instance;
            return that.ShowColumnHeaders;
        }
        private void set_134_DataControlBase_ShowColumnHeaders(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Grid.DataControlBase)instance;
            that.ShowColumnHeaders = (global::System.Boolean)Value;
        }
        private object get_135_DataControlBase_TotalSummaryContentStyle(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Grid.DataControlBase)instance;
            return that.TotalSummaryContentStyle;
        }
        private void set_135_DataControlBase_TotalSummaryContentStyle(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Grid.DataControlBase)instance;
            that.TotalSummaryContentStyle = (global::Windows.UI.Xaml.Style)Value;
        }
        private object get_136_DataControlBase_ColumnHeaderStyle(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Grid.DataControlBase)instance;
            return that.ColumnHeaderStyle;
        }
        private void set_136_DataControlBase_ColumnHeaderStyle(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Grid.DataControlBase)instance;
            that.ColumnHeaderStyle = (global::Windows.UI.Xaml.Style)Value;
        }
        private object get_137_DataControlBase_CellStyle(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Grid.DataControlBase)instance;
            return that.CellStyle;
        }
        private void set_137_DataControlBase_CellStyle(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Grid.DataControlBase)instance;
            that.CellStyle = (global::Windows.UI.Xaml.Style)Value;
        }
        private object get_138_DataControlBase_TotalSummaryItemTemplate(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Grid.DataControlBase)instance;
            return that.TotalSummaryItemTemplate;
        }
        private void set_138_DataControlBase_TotalSummaryItemTemplate(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Grid.DataControlBase)instance;
            that.TotalSummaryItemTemplate = (global::Windows.UI.Xaml.DataTemplate)Value;
        }
        private object get_139_DataControlBase_ColumnHeaderTemplate(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Grid.DataControlBase)instance;
            return that.ColumnHeaderTemplate;
        }
        private void set_139_DataControlBase_ColumnHeaderTemplate(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Grid.DataControlBase)instance;
            that.ColumnHeaderTemplate = (global::Windows.UI.Xaml.DataTemplate)Value;
        }
        private object get_140_DataControlBase_ColumnHeaderTemplateSelector(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Grid.DataControlBase)instance;
            return that.ColumnHeaderTemplateSelector;
        }
        private void set_140_DataControlBase_ColumnHeaderTemplateSelector(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Grid.DataControlBase)instance;
            that.ColumnHeaderTemplateSelector = (global::Windows.UI.Xaml.Controls.DataTemplateSelector)Value;
        }
        private object get_141_DataControlBase_Commands(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Grid.DataControlBase)instance;
            return that.Commands;
        }
        private object get_142_DataControlBase_SummariesIgnoreNullValues(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Grid.DataControlBase)instance;
            return that.SummariesIgnoreNullValues;
        }
        private void set_142_DataControlBase_SummariesIgnoreNullValues(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Grid.DataControlBase)instance;
            that.SummariesIgnoreNullValues = (global::System.Boolean)Value;
        }
        private object get_143_DataControlBase_ShowFixedTotalSummary(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Grid.DataControlBase)instance;
            return that.ShowFixedTotalSummary;
        }
        private void set_143_DataControlBase_ShowFixedTotalSummary(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Grid.DataControlBase)instance;
            that.ShowFixedTotalSummary = (global::System.Boolean)Value;
        }
        private object get_144_DataControlBase_PreserveSorting(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Grid.DataControlBase)instance;
            return that.PreserveSorting;
        }
        private void set_144_DataControlBase_PreserveSorting(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Grid.DataControlBase)instance;
            that.PreserveSorting = (global::System.Boolean)Value;
        }
        private object get_145_DataControlBase_SelectionMode(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Grid.DataControlBase)instance;
            return that.SelectionMode;
        }
        private void set_145_DataControlBase_SelectionMode(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Grid.DataControlBase)instance;
            that.SelectionMode = (global::DevExpress.UI.Xaml.Grid.MultiSelectMode)Value;
        }
        private object get_146_DataControlBase_SelectedItems(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Grid.DataControlBase)instance;
            return that.SelectedItems;
        }
        private void set_146_DataControlBase_SelectedItems(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Grid.DataControlBase)instance;
            that.SelectedItems = (global::System.Collections.IList)Value;
        }
        private object get_147_DataControlBase_ItemNavigationTargetType(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Grid.DataControlBase)instance;
            return that.ItemNavigationTargetType;
        }
        private void set_147_DataControlBase_ItemNavigationTargetType(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Grid.DataControlBase)instance;
            that.ItemNavigationTargetType = (global::System.String)Value;
        }
        private object get_148_DataControlBase_ItemNavigationMode(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Grid.DataControlBase)instance;
            return that.ItemNavigationMode;
        }
        private void set_148_DataControlBase_ItemNavigationMode(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Grid.DataControlBase)instance;
            that.ItemNavigationMode = (global::DevExpress.UI.Xaml.Grid.ItemNavigationMode)Value;
        }
        private object get_149_DataControlBase_ItemClickCommand(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Grid.DataControlBase)instance;
            return that.ItemClickCommand;
        }
        private void set_149_DataControlBase_ItemClickCommand(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Grid.DataControlBase)instance;
            that.ItemClickCommand = (global::System.Windows.Input.ICommand)Value;
        }
        private object get_150_DataControlBase_ItemNavigationTargetParameterBinding(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Grid.DataControlBase)instance;
            return that.ItemNavigationTargetParameterBinding;
        }
        private void set_150_DataControlBase_ItemNavigationTargetParameterBinding(object instance, object Value)
        {
            var that = (global::DevExpress.UI.Xaml.Grid.DataControlBase)instance;
            that.ItemNavigationTargetParameterBinding = (global::Windows.UI.Xaml.Data.BindingBase)Value;
        }
        private object get_151_DataControlBase_FixedSummariesLeft(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Grid.DataControlBase)instance;
            return that.FixedSummariesLeft;
        }
        private object get_152_GridTotalSummaryData_Item(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Grid.GridTotalSummaryData)instance;
            return that.Item;
        }
        private object get_153_GridTotalSummaryData_Value(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Grid.GridTotalSummaryData)instance;
            return that.Value;
        }
        private object get_154_GridTotalSummaryData_DisplayValue(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Grid.GridTotalSummaryData)instance;
            return that.DisplayValue;
        }
        private object get_155_GridTotalSummaryData_Caption(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Grid.GridTotalSummaryData)instance;
            return that.Caption;
        }
        private object get_156_GridTotalSummaryData_Column(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Grid.GridTotalSummaryData)instance;
            return that.Column;
        }
        private object get_157_GridTotalSummaryData_FixedTotalSummaryItemTemplate(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Grid.GridTotalSummaryData)instance;
            return that.FixedTotalSummaryItemTemplate;
        }
        private object get_158_GridTotalSummaryData_DataControl(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Grid.GridTotalSummaryData)instance;
            return that.DataControl;
        }
        private object get_159_DataControlBase_FixedSummariesRight(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Grid.DataControlBase)instance;
            return that.FixedSummariesRight;
        }
        private object get_160_DataControlBase_HeadersData(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Grid.DataControlBase)instance;
            return that.HeadersData;
        }
        private object get_161_DataControlBase_TotalSummaryData(object instance)
        {
            var that = (global::DevExpress.UI.Xaml.Grid.DataControlBase)instance;
            return that.TotalSummaryData;
        }
        private object get_162_DXControl_Focusable(object instance)
        {
            var that = (global::DevExpress.Core.Native.DXControl)instance;
            return that.Focusable;
        }
        private void set_162_DXControl_Focusable(object instance, object Value)
        {
            var that = (global::DevExpress.Core.Native.DXControl)instance;
            that.Focusable = (global::System.Boolean)Value;
        }
        private object get_163_DXControl_IsFocused(object instance)
        {
            var that = (global::DevExpress.Core.Native.DXControl)instance;
            return that.IsFocused;
        }
        private object get_164_DXControl_IsKeyboardFocusWithin(object instance)
        {
            var that = (global::DevExpress.Core.Native.DXControl)instance;
            return that.IsKeyboardFocusWithin;
        }
        private object get_165_DXControl_IsLoaded(object instance)
        {
            var that = (global::DevExpress.Core.Native.DXControl)instance;
            return that.IsLoaded;
        }
        private object get_166_DXControl_IsMouseOver(object instance)
        {
            var that = (global::DevExpress.Core.Native.DXControl)instance;
            return that.IsMouseOver;
        }
        private object get_167_DXControl_IsTabStop(object instance)
        {
            var that = (global::DevExpress.Core.Native.DXControl)instance;
            return that.IsTabStop;
        }
        private void set_167_DXControl_IsTabStop(object instance, object Value)
        {
            var that = (global::DevExpress.Core.Native.DXControl)instance;
            that.IsTabStop = (global::System.Boolean)Value;
        }
        private object get_168_DataControlBase_CurrentGrid(object instance)
        {
            return global::DevExpress.UI.Xaml.Grid.DataControlBase.GetCurrentGrid((global::Windows.UI.Xaml.DependencyObject)instance);
        }
        private void set_168_DataControlBase_CurrentGrid(object instance, object Value)
        {
            global::DevExpress.UI.Xaml.Grid.DataControlBase.SetCurrentGrid((global::Windows.UI.Xaml.DependencyObject)instance, (global::DevExpress.UI.Xaml.Grid.DataControlBase)Value);
        }
        private object get_169_DataControlBase_CurrentViewChangedListener(object instance)
        {
            return global::DevExpress.UI.Xaml.Grid.DataControlBase.GetCurrentViewChangedListener((global::Windows.UI.Xaml.DependencyObject)instance);
        }
        private void set_169_DataControlBase_CurrentViewChangedListener(object instance, object Value)
        {
            global::DevExpress.UI.Xaml.Grid.DataControlBase.SetCurrentViewChangedListener((global::Windows.UI.Xaml.DependencyObject)instance, (global::DevExpress.UI.Xaml.Grid.INotifyCurrentViewChanged)Value);
        }
        private object get_170_FeedbackListPage_DefaultViewModel(object instance)
        {
            var that = (global::WS.CFS.FeedbackListPage)instance;
            return that.DefaultViewModel;
        }
        private object get_171_FeedbackListPage_NavigationHelper(object instance)
        {
            var that = (global::WS.CFS.FeedbackListPage)instance;
            return that.NavigationHelper;
        }
        private object get_172_GroupedItemsPage1_DefaultViewModel(object instance)
        {
            var that = (global::WS.CFS.GroupedItemsPage1)instance;
            return that.DefaultViewModel;
        }
        private object get_173_GroupedItemsPage1_NavigationHelper(object instance)
        {
            var that = (global::WS.CFS.GroupedItemsPage1)instance;
            return that.NavigationHelper;
        }
        private object get_174_ItemDetailPage1_DefaultViewModel(object instance)
        {
            var that = (global::WS.CFS.ItemDetailPage1)instance;
            return that.DefaultViewModel;
        }
        private object get_175_ItemDetailPage1_NavigationHelper(object instance)
        {
            var that = (global::WS.CFS.ItemDetailPage1)instance;
            return that.NavigationHelper;
        }
        private object get_176_MainPage_DefaultViewModel(object instance)
        {
            var that = (global::WS.CFS.MainPage)instance;
            return that.DefaultViewModel;
        }
        private object get_177_MainPage_NavigationHelper(object instance)
        {
            var that = (global::WS.CFS.MainPage)instance;
            return that.NavigationHelper;
        }

        private global::Windows.UI.Xaml.Markup.IXamlMember CreateXamlMember(string longMemberName)
        {
            global::WS.CFS.WS_CFS_XamlTypeInfo.XamlMember xamlMember = null;
            global::WS.CFS.WS_CFS_XamlTypeInfo.XamlUserType userType;

            switch (longMemberName)
            {
            case "WS.CFS.Data.FeedbackDataSource.Feedbacks":
                userType = (global::WS.CFS.WS_CFS_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WS.CFS.Data.FeedbackDataSource");
                xamlMember = new global::WS.CFS.WS_CFS_XamlTypeInfo.XamlMember(this, "Feedbacks", "System.Collections.ObjectModel.ObservableCollection`1<WS.CFS.DataModel.Feedback>");
                xamlMember.Getter = get_0_FeedbackDataSource_Feedbacks;
                xamlMember.SetIsReadOnly();
                break;
            case "WS.CFS.DataModel.Feedback.Id":
                userType = (global::WS.CFS.WS_CFS_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WS.CFS.DataModel.Feedback");
                xamlMember = new global::WS.CFS.WS_CFS_XamlTypeInfo.XamlMember(this, "Id", "String");
                xamlMember.Getter = get_1_Feedback_Id;
                xamlMember.Setter = set_1_Feedback_Id;
                break;
            case "WS.CFS.DataModel.Feedback.Title":
                userType = (global::WS.CFS.WS_CFS_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WS.CFS.DataModel.Feedback");
                xamlMember = new global::WS.CFS.WS_CFS_XamlTypeInfo.XamlMember(this, "Title", "String");
                xamlMember.Getter = get_2_Feedback_Title;
                xamlMember.Setter = set_2_Feedback_Title;
                break;
            case "WS.CFS.DataModel.Feedback.Type":
                userType = (global::WS.CFS.WS_CFS_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WS.CFS.DataModel.Feedback");
                xamlMember = new global::WS.CFS.WS_CFS_XamlTypeInfo.XamlMember(this, "Type", "String");
                xamlMember.Getter = get_3_Feedback_Type;
                xamlMember.Setter = set_3_Feedback_Type;
                break;
            case "WS.CFS.DataModel.Feedback.Note":
                userType = (global::WS.CFS.WS_CFS_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WS.CFS.DataModel.Feedback");
                xamlMember = new global::WS.CFS.WS_CFS_XamlTypeInfo.XamlMember(this, "Note", "String");
                xamlMember.Getter = get_4_Feedback_Note;
                xamlMember.Setter = set_4_Feedback_Note;
                break;
            case "WS.CFS.DataModel.Feedback.Status":
                userType = (global::WS.CFS.WS_CFS_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WS.CFS.DataModel.Feedback");
                xamlMember = new global::WS.CFS.WS_CFS_XamlTypeInfo.XamlMember(this, "Status", "String");
                xamlMember.Getter = get_5_Feedback_Status;
                xamlMember.Setter = set_5_Feedback_Status;
                break;
            case "WS.CFS.AddFeedbackPage.DefaultViewModel":
                userType = (global::WS.CFS.WS_CFS_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WS.CFS.AddFeedbackPage");
                xamlMember = new global::WS.CFS.WS_CFS_XamlTypeInfo.XamlMember(this, "DefaultViewModel", "WS.CFS.Common.ObservableDictionary");
                xamlMember.Getter = get_6_AddFeedbackPage_DefaultViewModel;
                xamlMember.SetIsReadOnly();
                break;
            case "WS.CFS.AddFeedbackPage.NavigationHelper":
                userType = (global::WS.CFS.WS_CFS_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WS.CFS.AddFeedbackPage");
                xamlMember = new global::WS.CFS.WS_CFS_XamlTypeInfo.XamlMember(this, "NavigationHelper", "WS.CFS.Common.NavigationHelper");
                xamlMember.Getter = get_7_AddFeedbackPage_NavigationHelper;
                xamlMember.SetIsReadOnly();
                break;
            case "DevExpress.UI.Xaml.Grid.DataControlBase.AutoGenerateColumns":
                userType = (global::WS.CFS.WS_CFS_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Grid.DataControlBase");
                xamlMember = new global::WS.CFS.WS_CFS_XamlTypeInfo.XamlMember(this, "AutoGenerateColumns", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_8_DataControlBase_AutoGenerateColumns;
                xamlMember.Setter = set_8_DataControlBase_AutoGenerateColumns;
                break;
            case "DevExpress.UI.Xaml.Grid.GridControl.ActualItemTemplateSelector":
                userType = (global::WS.CFS.WS_CFS_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Grid.GridControl");
                xamlMember = new global::WS.CFS.WS_CFS_XamlTypeInfo.XamlMember(this, "ActualItemTemplateSelector", "Windows.UI.Xaml.Controls.DataTemplateSelector");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_9_GridControl_ActualItemTemplateSelector;
                xamlMember.SetIsReadOnly();
                break;
            case "DevExpress.UI.Xaml.Grid.GridControl.AllowHorizontalScrollingVirtualization":
                userType = (global::WS.CFS.WS_CFS_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Grid.GridControl");
                xamlMember = new global::WS.CFS.WS_CFS_XamlTypeInfo.XamlMember(this, "AllowHorizontalScrollingVirtualization", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_10_GridControl_AllowHorizontalScrollingVirtualization;
                xamlMember.Setter = set_10_GridControl_AllowHorizontalScrollingVirtualization;
                break;
            case "DevExpress.UI.Xaml.Grid.GridControl.ItemMinHeight":
                userType = (global::WS.CFS.WS_CFS_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Grid.GridControl");
                xamlMember = new global::WS.CFS.WS_CFS_XamlTypeInfo.XamlMember(this, "ItemMinHeight", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_11_GridControl_ItemMinHeight;
                xamlMember.Setter = set_11_GridControl_ItemMinHeight;
                break;
            case "DevExpress.UI.Xaml.Grid.GridControl.ItemContainerStyle":
                userType = (global::WS.CFS.WS_CFS_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Grid.GridControl");
                xamlMember = new global::WS.CFS.WS_CFS_XamlTypeInfo.XamlMember(this, "ItemContainerStyle", "Windows.UI.Xaml.Style");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_12_GridControl_ItemContainerStyle;
                xamlMember.Setter = set_12_GridControl_ItemContainerStyle;
                break;
            case "DevExpress.UI.Xaml.Grid.GridControl.ItemTemplate":
                userType = (global::WS.CFS.WS_CFS_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Grid.GridControl");
                xamlMember = new global::WS.CFS.WS_CFS_XamlTypeInfo.XamlMember(this, "ItemTemplate", "Windows.UI.Xaml.DataTemplate");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_13_GridControl_ItemTemplate;
                xamlMember.Setter = set_13_GridControl_ItemTemplate;
                break;
            case "DevExpress.UI.Xaml.Grid.GridControl.ItemTemplateSelector":
                userType = (global::WS.CFS.WS_CFS_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Grid.GridControl");
                xamlMember = new global::WS.CFS.WS_CFS_XamlTypeInfo.XamlMember(this, "ItemTemplateSelector", "Windows.UI.Xaml.Controls.DataTemplateSelector");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_14_GridControl_ItemTemplateSelector;
                xamlMember.Setter = set_14_GridControl_ItemTemplateSelector;
                break;
            case "DevExpress.UI.Xaml.Grid.GridControl.AutoWidth":
                userType = (global::WS.CFS.WS_CFS_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Grid.GridControl");
                xamlMember = new global::WS.CFS.WS_CFS_XamlTypeInfo.XamlMember(this, "AutoWidth", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_15_GridControl_AutoWidth;
                xamlMember.Setter = set_15_GridControl_AutoWidth;
                break;
            case "DevExpress.UI.Xaml.Grid.GridControl.LeftDataAreaIndent":
                userType = (global::WS.CFS.WS_CFS_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Grid.GridControl");
                xamlMember = new global::WS.CFS.WS_CFS_XamlTypeInfo.XamlMember(this, "LeftDataAreaIndent", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_16_GridControl_LeftDataAreaIndent;
                xamlMember.Setter = set_16_GridControl_LeftDataAreaIndent;
                break;
            case "DevExpress.UI.Xaml.Grid.GridControl.RightDataAreaIndent":
                userType = (global::WS.CFS.WS_CFS_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Grid.GridControl");
                xamlMember = new global::WS.CFS.WS_CFS_XamlTypeInfo.XamlMember(this, "RightDataAreaIndent", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_17_GridControl_RightDataAreaIndent;
                xamlMember.Setter = set_17_GridControl_RightDataAreaIndent;
                break;
            case "DevExpress.UI.Xaml.Grid.GridControl.HorizontalViewport":
                userType = (global::WS.CFS.WS_CFS_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Grid.GridControl");
                xamlMember = new global::WS.CFS.WS_CFS_XamlTypeInfo.XamlMember(this, "HorizontalViewport", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_18_GridControl_HorizontalViewport;
                xamlMember.SetIsReadOnly();
                break;
            case "DevExpress.UI.Xaml.Grid.GridControl.LeftGroupAreaIndent":
                userType = (global::WS.CFS.WS_CFS_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Grid.GridControl");
                xamlMember = new global::WS.CFS.WS_CFS_XamlTypeInfo.XamlMember(this, "LeftGroupAreaIndent", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_19_GridControl_LeftGroupAreaIndent;
                xamlMember.Setter = set_19_GridControl_LeftGroupAreaIndent;
                break;
            case "DevExpress.UI.Xaml.Grid.GridControl.GroupSummaryDisplayMode":
                userType = (global::WS.CFS.WS_CFS_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Grid.GridControl");
                xamlMember = new global::WS.CFS.WS_CFS_XamlTypeInfo.XamlMember(this, "GroupSummaryDisplayMode", "DevExpress.UI.Xaml.Grid.GroupSummaryDisplayMode");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_20_GridControl_GroupSummaryDisplayMode;
                xamlMember.Setter = set_20_GridControl_GroupSummaryDisplayMode;
                break;
            case "DevExpress.UI.Xaml.Grid.GridControl.GroupColumnSummaryContentStyle":
                userType = (global::WS.CFS.WS_CFS_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Grid.GridControl");
                xamlMember = new global::WS.CFS.WS_CFS_XamlTypeInfo.XamlMember(this, "GroupColumnSummaryContentStyle", "Windows.UI.Xaml.Style");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_21_GridControl_GroupColumnSummaryContentStyle;
                xamlMember.Setter = set_21_GridControl_GroupColumnSummaryContentStyle;
                break;
            case "DevExpress.UI.Xaml.Grid.GridControl.AutoExpandAllGroups":
                userType = (global::WS.CFS.WS_CFS_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Grid.GridControl");
                xamlMember = new global::WS.CFS.WS_CFS_XamlTypeInfo.XamlMember(this, "AutoExpandAllGroups", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_22_GridControl_AutoExpandAllGroups;
                xamlMember.Setter = set_22_GridControl_AutoExpandAllGroups;
                break;
            case "DevExpress.UI.Xaml.Grid.GridControl.AllowLiveDataShaping":
                userType = (global::WS.CFS.WS_CFS_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Grid.GridControl");
                xamlMember = new global::WS.CFS.WS_CFS_XamlTypeInfo.XamlMember(this, "AllowLiveDataShaping", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_23_GridControl_AllowLiveDataShaping;
                xamlMember.Setter = set_23_GridControl_AllowLiveDataShaping;
                break;
            case "DevExpress.UI.Xaml.Grid.GridControl.IsGrouped":
                userType = (global::WS.CFS.WS_CFS_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Grid.GridControl");
                xamlMember = new global::WS.CFS.WS_CFS_XamlTypeInfo.XamlMember(this, "IsGrouped", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_24_GridControl_IsGrouped;
                xamlMember.SetIsReadOnly();
                break;
            case "DevExpress.UI.Xaml.Grid.GridControl.ActualGroupCount":
                userType = (global::WS.CFS.WS_CFS_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Grid.GridControl");
                xamlMember = new global::WS.CFS.WS_CFS_XamlTypeInfo.XamlMember(this, "ActualGroupCount", "Int32");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_25_GridControl_ActualGroupCount;
                xamlMember.SetIsReadOnly();
                break;
            case "DevExpress.UI.Xaml.Grid.GridControl.GroupSummary":
                userType = (global::WS.CFS.WS_CFS_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Grid.GridControl");
                xamlMember = new global::WS.CFS.WS_CFS_XamlTypeInfo.XamlMember(this, "GroupSummary", "DevExpress.UI.Xaml.Grid.GridSummaryItemCollection");
                xamlMember.Getter = get_26_GridControl_GroupSummary;
                xamlMember.SetIsReadOnly();
                break;
            case "DevExpress.UI.Xaml.Grid.SummaryItemBase.SummaryType":
                userType = (global::WS.CFS.WS_CFS_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Grid.SummaryItemBase");
                xamlMember = new global::WS.CFS.WS_CFS_XamlTypeInfo.XamlMember(this, "SummaryType", "DevExpress.Data.SummaryItemType");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_27_SummaryItemBase_SummaryType;
                xamlMember.Setter = set_27_SummaryItemBase_SummaryType;
                break;
            case "DevExpress.UI.Xaml.Grid.SummaryItemBase.Tag":
                userType = (global::WS.CFS.WS_CFS_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Grid.SummaryItemBase");
                xamlMember = new global::WS.CFS.WS_CFS_XamlTypeInfo.XamlMember(this, "Tag", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_28_SummaryItemBase_Tag;
                xamlMember.Setter = set_28_SummaryItemBase_Tag;
                break;
            case "DevExpress.UI.Xaml.Grid.SummaryItemBase.FieldName":
                userType = (global::WS.CFS.WS_CFS_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Grid.SummaryItemBase");
                xamlMember = new global::WS.CFS.WS_CFS_XamlTypeInfo.XamlMember(this, "FieldName", "String");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_29_SummaryItemBase_FieldName;
                xamlMember.Setter = set_29_SummaryItemBase_FieldName;
                break;
            case "DevExpress.UI.Xaml.Grid.SummaryItemBase.DisplayFormat":
                userType = (global::WS.CFS.WS_CFS_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Grid.SummaryItemBase");
                xamlMember = new global::WS.CFS.WS_CFS_XamlTypeInfo.XamlMember(this, "DisplayFormat", "String");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_30_SummaryItemBase_DisplayFormat;
                xamlMember.Setter = set_30_SummaryItemBase_DisplayFormat;
                break;
            case "DevExpress.UI.Xaml.Grid.SummaryItemBase.ShowInColumn":
                userType = (global::WS.CFS.WS_CFS_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Grid.SummaryItemBase");
                xamlMember = new global::WS.CFS.WS_CFS_XamlTypeInfo.XamlMember(this, "ShowInColumn", "String");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_31_SummaryItemBase_ShowInColumn;
                xamlMember.Setter = set_31_SummaryItemBase_ShowInColumn;
                break;
            case "DevExpress.UI.Xaml.Grid.SummaryItemBase.Visible":
                userType = (global::WS.CFS.WS_CFS_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Grid.SummaryItemBase");
                xamlMember = new global::WS.CFS.WS_CFS_XamlTypeInfo.XamlMember(this, "Visible", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_32_SummaryItemBase_Visible;
                xamlMember.Setter = set_32_SummaryItemBase_Visible;
                break;
            case "DevExpress.UI.Xaml.Grid.SummaryItemBase.Alignment":
                userType = (global::WS.CFS.WS_CFS_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Grid.SummaryItemBase");
                xamlMember = new global::WS.CFS.WS_CFS_XamlTypeInfo.XamlMember(this, "Alignment", "DevExpress.UI.Xaml.Grid.GridSummaryItemAlignment");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_33_SummaryItemBase_Alignment;
                xamlMember.Setter = set_33_SummaryItemBase_Alignment;
                break;
            case "DevExpress.UI.Xaml.Grid.SummaryItemBase.Caption":
                userType = (global::WS.CFS.WS_CFS_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Grid.SummaryItemBase");
                xamlMember = new global::WS.CFS.WS_CFS_XamlTypeInfo.XamlMember(this, "Caption", "String");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_34_SummaryItemBase_Caption;
                xamlMember.Setter = set_34_SummaryItemBase_Caption;
                break;
            case "DevExpress.UI.Xaml.Grid.SummaryItemBase.FixedTotalSummaryItemTemplate":
                userType = (global::WS.CFS.WS_CFS_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Grid.SummaryItemBase");
                xamlMember = new global::WS.CFS.WS_CFS_XamlTypeInfo.XamlMember(this, "FixedTotalSummaryItemTemplate", "Windows.UI.Xaml.DataTemplate");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_35_SummaryItemBase_FixedTotalSummaryItemTemplate;
                xamlMember.Setter = set_35_SummaryItemBase_FixedTotalSummaryItemTemplate;
                break;
            case "DevExpress.UI.Xaml.Grid.SummaryItemBase.IsLast":
                userType = (global::WS.CFS.WS_CFS_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Grid.SummaryItemBase");
                xamlMember = new global::WS.CFS.WS_CFS_XamlTypeInfo.XamlMember(this, "IsLast", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_36_SummaryItemBase_IsLast;
                xamlMember.Setter = set_36_SummaryItemBase_IsLast;
                break;
            case "DevExpress.UI.Xaml.Grid.GridControl.Columns":
                userType = (global::WS.CFS.WS_CFS_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Grid.GridControl");
                xamlMember = new global::WS.CFS.WS_CFS_XamlTypeInfo.XamlMember(this, "Columns", "DevExpress.UI.Xaml.Grid.GridColumnCollection");
                xamlMember.Getter = get_37_GridControl_Columns;
                xamlMember.SetIsReadOnly();
                break;
            case "DevExpress.UI.Xaml.Grid.GridColumnBase.IsGrouped":
                userType = (global::WS.CFS.WS_CFS_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Grid.GridColumnBase");
                xamlMember = new global::WS.CFS.WS_CFS_XamlTypeInfo.XamlMember(this, "IsGrouped", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_38_GridColumnBase_IsGrouped;
                xamlMember.SetIsReadOnly();
                break;
            case "DevExpress.UI.Xaml.Grid.GridColumnBase.GroupInterval":
                userType = (global::WS.CFS.WS_CFS_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Grid.GridColumnBase");
                xamlMember = new global::WS.CFS.WS_CFS_XamlTypeInfo.XamlMember(this, "GroupInterval", "DevExpress.XtraGrid.ColumnGroupInterval");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_39_GridColumnBase_GroupInterval;
                xamlMember.Setter = set_39_GridColumnBase_GroupInterval;
                break;
            case "DevExpress.UI.Xaml.Grid.GridColumnBase.GroupIndex":
                userType = (global::WS.CFS.WS_CFS_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Grid.GridColumnBase");
                xamlMember = new global::WS.CFS.WS_CFS_XamlTypeInfo.XamlMember(this, "GroupIndex", "Int32");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_40_GridColumnBase_GroupIndex;
                xamlMember.Setter = set_40_GridColumnBase_GroupIndex;
                break;
            case "DevExpress.UI.Xaml.Grid.GridColumnBase.GroupValueTemplate":
                userType = (global::WS.CFS.WS_CFS_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Grid.GridColumnBase");
                xamlMember = new global::WS.CFS.WS_CFS_XamlTypeInfo.XamlMember(this, "GroupValueTemplate", "Windows.UI.Xaml.DataTemplate");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_41_GridColumnBase_GroupValueTemplate;
                xamlMember.Setter = set_41_GridColumnBase_GroupValueTemplate;
                break;
            case "DevExpress.UI.Xaml.Grid.GridColumnBase.GroupValueTemplateSelector":
                userType = (global::WS.CFS.WS_CFS_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Grid.GridColumnBase");
                xamlMember = new global::WS.CFS.WS_CFS_XamlTypeInfo.XamlMember(this, "GroupValueTemplateSelector", "Windows.UI.Xaml.Controls.DataTemplateSelector");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_42_GridColumnBase_GroupValueTemplateSelector;
                xamlMember.Setter = set_42_GridColumnBase_GroupValueTemplateSelector;
                break;
            case "DevExpress.UI.Xaml.Grid.GridColumnBase.ActualGroupValueTemplateSelector":
                userType = (global::WS.CFS.WS_CFS_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Grid.GridColumnBase");
                xamlMember = new global::WS.CFS.WS_CFS_XamlTypeInfo.XamlMember(this, "ActualGroupValueTemplateSelector", "Windows.UI.Xaml.Controls.DataTemplateSelector");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_43_GridColumnBase_ActualGroupValueTemplateSelector;
                xamlMember.SetIsReadOnly();
                break;
            case "DevExpress.UI.Xaml.Grid.GridColumnBase.AllowGrouping":
                userType = (global::WS.CFS.WS_CFS_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Grid.GridColumnBase");
                xamlMember = new global::WS.CFS.WS_CFS_XamlTypeInfo.XamlMember(this, "AllowGrouping", "DevExpress.Utils.DefaultBoolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_44_GridColumnBase_AllowGrouping;
                xamlMember.Setter = set_44_GridColumnBase_AllowGrouping;
                break;
            case "DevExpress.UI.Xaml.Grid.GridColumnBase.ActualAllowGrouping":
                userType = (global::WS.CFS.WS_CFS_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Grid.GridColumnBase");
                xamlMember = new global::WS.CFS.WS_CFS_XamlTypeInfo.XamlMember(this, "ActualAllowGrouping", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_45_GridColumnBase_ActualAllowGrouping;
                xamlMember.SetIsReadOnly();
                break;
            case "DevExpress.UI.Xaml.Grid.GridColumnBase.GroupColumnSummaryItemTemplate":
                userType = (global::WS.CFS.WS_CFS_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Grid.GridColumnBase");
                xamlMember = new global::WS.CFS.WS_CFS_XamlTypeInfo.XamlMember(this, "GroupColumnSummaryItemTemplate", "Windows.UI.Xaml.DataTemplate");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_46_GridColumnBase_GroupColumnSummaryItemTemplate;
                xamlMember.Setter = set_46_GridColumnBase_GroupColumnSummaryItemTemplate;
                break;
            case "DevExpress.UI.Xaml.Grid.GridColumnBase.GroupColumnSummaryContentStyle":
                userType = (global::WS.CFS.WS_CFS_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Grid.GridColumnBase");
                xamlMember = new global::WS.CFS.WS_CFS_XamlTypeInfo.XamlMember(this, "GroupColumnSummaryContentStyle", "Windows.UI.Xaml.Style");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_47_GridColumnBase_GroupColumnSummaryContentStyle;
                xamlMember.Setter = set_47_GridColumnBase_GroupColumnSummaryContentStyle;
                break;
            case "DevExpress.UI.Xaml.Grid.ColumnBase.DataControl":
                userType = (global::WS.CFS.WS_CFS_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Grid.ColumnBase");
                xamlMember = new global::WS.CFS.WS_CFS_XamlTypeInfo.XamlMember(this, "DataControl", "DevExpress.UI.Xaml.Grid.DataControlBase");
                xamlMember.Getter = get_48_ColumnBase_DataControl;
                xamlMember.SetIsReadOnly();
                break;
            case "DevExpress.UI.Xaml.Grid.ColumnBase.HorizontalHeaderContentAlignment":
                userType = (global::WS.CFS.WS_CFS_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Grid.ColumnBase");
                xamlMember = new global::WS.CFS.WS_CFS_XamlTypeInfo.XamlMember(this, "HorizontalHeaderContentAlignment", "Windows.UI.Xaml.HorizontalAlignment");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_49_ColumnBase_HorizontalHeaderContentAlignment;
                xamlMember.Setter = set_49_ColumnBase_HorizontalHeaderContentAlignment;
                break;
            case "DevExpress.UI.Xaml.Grid.ColumnBase.IsSorted":
                userType = (global::WS.CFS.WS_CFS_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Grid.ColumnBase");
                xamlMember = new global::WS.CFS.WS_CFS_XamlTypeInfo.XamlMember(this, "IsSorted", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_50_ColumnBase_IsSorted;
                xamlMember.SetIsReadOnly();
                break;
            case "DevExpress.UI.Xaml.Grid.ColumnBase.IsSortedBySummary":
                userType = (global::WS.CFS.WS_CFS_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Grid.ColumnBase");
                xamlMember = new global::WS.CFS.WS_CFS_XamlTypeInfo.XamlMember(this, "IsSortedBySummary", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_51_ColumnBase_IsSortedBySummary;
                xamlMember.SetIsReadOnly();
                break;
            case "DevExpress.UI.Xaml.Grid.ColumnBase.SortOrder":
                userType = (global::WS.CFS.WS_CFS_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Grid.ColumnBase");
                xamlMember = new global::WS.CFS.WS_CFS_XamlTypeInfo.XamlMember(this, "SortOrder", "DevExpress.Data.ColumnSortOrder");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_52_ColumnBase_SortOrder;
                xamlMember.Setter = set_52_ColumnBase_SortOrder;
                break;
            case "DevExpress.UI.Xaml.Grid.ColumnBase.SortIndex":
                userType = (global::WS.CFS.WS_CFS_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Grid.ColumnBase");
                xamlMember = new global::WS.CFS.WS_CFS_XamlTypeInfo.XamlMember(this, "SortIndex", "Int32");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_53_ColumnBase_SortIndex;
                xamlMember.Setter = set_53_ColumnBase_SortIndex;
                break;
            case "DevExpress.UI.Xaml.Grid.ColumnBase.FieldName":
                userType = (global::WS.CFS.WS_CFS_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Grid.ColumnBase");
                xamlMember = new global::WS.CFS.WS_CFS_XamlTypeInfo.XamlMember(this, "FieldName", "String");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_54_ColumnBase_FieldName;
                xamlMember.Setter = set_54_ColumnBase_FieldName;
                break;
            case "DevExpress.UI.Xaml.Grid.ColumnBase.FieldType":
                userType = (global::WS.CFS.WS_CFS_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Grid.ColumnBase");
                xamlMember = new global::WS.CFS.WS_CFS_XamlTypeInfo.XamlMember(this, "FieldType", "System.Type");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_55_ColumnBase_FieldType;
                xamlMember.SetIsReadOnly();
                break;
            case "DevExpress.UI.Xaml.Grid.ColumnBase.UnboundType":
                userType = (global::WS.CFS.WS_CFS_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Grid.ColumnBase");
                xamlMember = new global::WS.CFS.WS_CFS_XamlTypeInfo.XamlMember(this, "UnboundType", "DevExpress.Data.UnboundColumnType");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_56_ColumnBase_UnboundType;
                xamlMember.Setter = set_56_ColumnBase_UnboundType;
                break;
            case "DevExpress.UI.Xaml.Grid.ColumnBase.UnboundExpression":
                userType = (global::WS.CFS.WS_CFS_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Grid.ColumnBase");
                xamlMember = new global::WS.CFS.WS_CFS_XamlTypeInfo.XamlMember(this, "UnboundExpression", "String");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_57_ColumnBase_UnboundExpression;
                xamlMember.Setter = set_57_ColumnBase_UnboundExpression;
                break;
            case "DevExpress.UI.Xaml.Grid.ColumnBase.AllowEditing":
                userType = (global::WS.CFS.WS_CFS_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Grid.ColumnBase");
                xamlMember = new global::WS.CFS.WS_CFS_XamlTypeInfo.XamlMember(this, "AllowEditing", "DevExpress.Utils.DefaultBoolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_58_ColumnBase_AllowEditing;
                xamlMember.Setter = set_58_ColumnBase_AllowEditing;
                break;
            case "DevExpress.UI.Xaml.Grid.ColumnBase.TotalSummaryContentStyle":
                userType = (global::WS.CFS.WS_CFS_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Grid.ColumnBase");
                xamlMember = new global::WS.CFS.WS_CFS_XamlTypeInfo.XamlMember(this, "TotalSummaryContentStyle", "Windows.UI.Xaml.Style");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_59_ColumnBase_TotalSummaryContentStyle;
                xamlMember.Setter = set_59_ColumnBase_TotalSummaryContentStyle;
                break;
            case "DevExpress.UI.Xaml.Grid.ColumnBase.ActualTotalSummaryContentStyle":
                userType = (global::WS.CFS.WS_CFS_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Grid.ColumnBase");
                xamlMember = new global::WS.CFS.WS_CFS_XamlTypeInfo.XamlMember(this, "ActualTotalSummaryContentStyle", "Windows.UI.Xaml.Style");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_60_ColumnBase_ActualTotalSummaryContentStyle;
                xamlMember.SetIsReadOnly();
                break;
            case "DevExpress.UI.Xaml.Grid.ColumnBase.SortMode":
                userType = (global::WS.CFS.WS_CFS_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Grid.ColumnBase");
                xamlMember = new global::WS.CFS.WS_CFS_XamlTypeInfo.XamlMember(this, "SortMode", "DevExpress.XtraGrid.ColumnSortMode");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_61_ColumnBase_SortMode;
                xamlMember.Setter = set_61_ColumnBase_SortMode;
                break;
            case "DevExpress.UI.Xaml.Grid.ColumnBase.CellStyle":
                userType = (global::WS.CFS.WS_CFS_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Grid.ColumnBase");
                xamlMember = new global::WS.CFS.WS_CFS_XamlTypeInfo.XamlMember(this, "CellStyle", "Windows.UI.Xaml.Style");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_62_ColumnBase_CellStyle;
                xamlMember.Setter = set_62_ColumnBase_CellStyle;
                break;
            case "DevExpress.UI.Xaml.Grid.ColumnBase.HeaderStyle":
                userType = (global::WS.CFS.WS_CFS_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Grid.ColumnBase");
                xamlMember = new global::WS.CFS.WS_CFS_XamlTypeInfo.XamlMember(this, "HeaderStyle", "Windows.UI.Xaml.Style");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_63_ColumnBase_HeaderStyle;
                xamlMember.Setter = set_63_ColumnBase_HeaderStyle;
                break;
            case "DevExpress.UI.Xaml.Grid.ColumnBase.ActualCellStyle":
                userType = (global::WS.CFS.WS_CFS_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Grid.ColumnBase");
                xamlMember = new global::WS.CFS.WS_CFS_XamlTypeInfo.XamlMember(this, "ActualCellStyle", "Windows.UI.Xaml.Style");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_64_ColumnBase_ActualCellStyle;
                xamlMember.SetIsReadOnly();
                break;
            case "DevExpress.UI.Xaml.Grid.ColumnBase.ActualHeaderStyle":
                userType = (global::WS.CFS.WS_CFS_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Grid.ColumnBase");
                xamlMember = new global::WS.CFS.WS_CFS_XamlTypeInfo.XamlMember(this, "ActualHeaderStyle", "Windows.UI.Xaml.Style");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_65_ColumnBase_ActualHeaderStyle;
                xamlMember.SetIsReadOnly();
                break;
            case "DevExpress.UI.Xaml.Grid.ColumnBase.ActualAllowColumnFiltering":
                userType = (global::WS.CFS.WS_CFS_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Grid.ColumnBase");
                xamlMember = new global::WS.CFS.WS_CFS_XamlTypeInfo.XamlMember(this, "ActualAllowColumnFiltering", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_66_ColumnBase_ActualAllowColumnFiltering;
                xamlMember.SetIsReadOnly();
                break;
            case "DevExpress.UI.Xaml.Grid.ColumnBase.HasRightSibling":
                userType = (global::WS.CFS.WS_CFS_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Grid.ColumnBase");
                xamlMember = new global::WS.CFS.WS_CFS_XamlTypeInfo.XamlMember(this, "HasRightSibling", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_67_ColumnBase_HasRightSibling;
                xamlMember.Setter = set_67_ColumnBase_HasRightSibling;
                break;
            case "DevExpress.UI.Xaml.Grid.ColumnBase.HasLeftSibling":
                userType = (global::WS.CFS.WS_CFS_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Grid.ColumnBase");
                xamlMember = new global::WS.CFS.WS_CFS_XamlTypeInfo.XamlMember(this, "HasLeftSibling", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_68_ColumnBase_HasLeftSibling;
                xamlMember.Setter = set_68_ColumnBase_HasLeftSibling;
                break;
            case "DevExpress.UI.Xaml.Grid.ColumnBase.VisibleIndex":
                userType = (global::WS.CFS.WS_CFS_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Grid.ColumnBase");
                xamlMember = new global::WS.CFS.WS_CFS_XamlTypeInfo.XamlMember(this, "VisibleIndex", "Int32");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_69_ColumnBase_VisibleIndex;
                xamlMember.Setter = set_69_ColumnBase_VisibleIndex;
                break;
            case "DevExpress.UI.Xaml.Grid.ColumnBase.IsLast":
                userType = (global::WS.CFS.WS_CFS_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Grid.ColumnBase");
                xamlMember = new global::WS.CFS.WS_CFS_XamlTypeInfo.XamlMember(this, "IsLast", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_70_ColumnBase_IsLast;
                xamlMember.SetIsReadOnly();
                break;
            case "DevExpress.UI.Xaml.Grid.ColumnBase.IsFirst":
                userType = (global::WS.CFS.WS_CFS_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Grid.ColumnBase");
                xamlMember = new global::WS.CFS.WS_CFS_XamlTypeInfo.XamlMember(this, "IsFirst", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_71_ColumnBase_IsFirst;
                xamlMember.SetIsReadOnly();
                break;
            case "DevExpress.UI.Xaml.Grid.ColumnBase.Name":
                userType = (global::WS.CFS.WS_CFS_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Grid.ColumnBase");
                xamlMember = new global::WS.CFS.WS_CFS_XamlTypeInfo.XamlMember(this, "Name", "String");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_72_ColumnBase_Name;
                xamlMember.Setter = set_72_ColumnBase_Name;
                break;
            case "DevExpress.UI.Xaml.Grid.ColumnBase.Tag":
                userType = (global::WS.CFS.WS_CFS_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Grid.ColumnBase");
                xamlMember = new global::WS.CFS.WS_CFS_XamlTypeInfo.XamlMember(this, "Tag", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_73_ColumnBase_Tag;
                xamlMember.Setter = set_73_ColumnBase_Tag;
                break;
            case "DevExpress.UI.Xaml.Grid.ColumnBase.Commands":
                userType = (global::WS.CFS.WS_CFS_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Grid.ColumnBase");
                xamlMember = new global::WS.CFS.WS_CFS_XamlTypeInfo.XamlMember(this, "Commands", "DevExpress.UI.Xaml.Grid.GridColumnCommands");
                xamlMember.Getter = get_74_ColumnBase_Commands;
                xamlMember.SetIsReadOnly();
                break;
            case "DevExpress.UI.Xaml.Grid.ColumnBase.Header":
                userType = (global::WS.CFS.WS_CFS_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Grid.ColumnBase");
                xamlMember = new global::WS.CFS.WS_CFS_XamlTypeInfo.XamlMember(this, "Header", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_75_ColumnBase_Header;
                xamlMember.Setter = set_75_ColumnBase_Header;
                break;
            case "DevExpress.UI.Xaml.Grid.ColumnBase.HeaderCaption":
                userType = (global::WS.CFS.WS_CFS_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Grid.ColumnBase");
                xamlMember = new global::WS.CFS.WS_CFS_XamlTypeInfo.XamlMember(this, "HeaderCaption", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_76_ColumnBase_HeaderCaption;
                xamlMember.SetIsReadOnly();
                break;
            case "DevExpress.UI.Xaml.Grid.ColumnBase.ActualHeaderWidth":
                userType = (global::WS.CFS.WS_CFS_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Grid.ColumnBase");
                xamlMember = new global::WS.CFS.WS_CFS_XamlTypeInfo.XamlMember(this, "ActualHeaderWidth", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_77_ColumnBase_ActualHeaderWidth;
                xamlMember.SetIsReadOnly();
                break;
            case "DevExpress.UI.Xaml.Grid.ColumnBase.ActualDataWidth":
                userType = (global::WS.CFS.WS_CFS_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Grid.ColumnBase");
                xamlMember = new global::WS.CFS.WS_CFS_XamlTypeInfo.XamlMember(this, "ActualDataWidth", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_78_ColumnBase_ActualDataWidth;
                xamlMember.SetIsReadOnly();
                break;
            case "DevExpress.UI.Xaml.Grid.ColumnBase.Width":
                userType = (global::WS.CFS.WS_CFS_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Grid.ColumnBase");
                xamlMember = new global::WS.CFS.WS_CFS_XamlTypeInfo.XamlMember(this, "Width", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_79_ColumnBase_Width;
                xamlMember.Setter = set_79_ColumnBase_Width;
                break;
            case "DevExpress.UI.Xaml.Grid.ColumnBase.MinWidth":
                userType = (global::WS.CFS.WS_CFS_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Grid.ColumnBase");
                xamlMember = new global::WS.CFS.WS_CFS_XamlTypeInfo.XamlMember(this, "MinWidth", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_80_ColumnBase_MinWidth;
                xamlMember.Setter = set_80_ColumnBase_MinWidth;
                break;
            case "DevExpress.UI.Xaml.Grid.ColumnBase.ActualWidth":
                userType = (global::WS.CFS.WS_CFS_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Grid.ColumnBase");
                xamlMember = new global::WS.CFS.WS_CFS_XamlTypeInfo.XamlMember(this, "ActualWidth", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_81_ColumnBase_ActualWidth;
                xamlMember.SetIsReadOnly();
                break;
            case "DevExpress.UI.Xaml.Grid.ColumnBase.FixedWidth":
                userType = (global::WS.CFS.WS_CFS_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Grid.ColumnBase");
                xamlMember = new global::WS.CFS.WS_CFS_XamlTypeInfo.XamlMember(this, "FixedWidth", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_82_ColumnBase_FixedWidth;
                xamlMember.Setter = set_82_ColumnBase_FixedWidth;
                break;
            case "DevExpress.UI.Xaml.Grid.ColumnBase.Visible":
                userType = (global::WS.CFS.WS_CFS_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Grid.ColumnBase");
                xamlMember = new global::WS.CFS.WS_CFS_XamlTypeInfo.XamlMember(this, "Visible", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_83_ColumnBase_Visible;
                xamlMember.Setter = set_83_ColumnBase_Visible;
                break;
            case "DevExpress.UI.Xaml.Grid.ColumnBase.AllowSorting":
                userType = (global::WS.CFS.WS_CFS_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Grid.ColumnBase");
                xamlMember = new global::WS.CFS.WS_CFS_XamlTypeInfo.XamlMember(this, "AllowSorting", "DevExpress.Utils.DefaultBoolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_84_ColumnBase_AllowSorting;
                xamlMember.Setter = set_84_ColumnBase_AllowSorting;
                break;
            case "DevExpress.UI.Xaml.Grid.ColumnBase.ActualAllowSorting":
                userType = (global::WS.CFS.WS_CFS_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Grid.ColumnBase");
                xamlMember = new global::WS.CFS.WS_CFS_XamlTypeInfo.XamlMember(this, "ActualAllowSorting", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_85_ColumnBase_ActualAllowSorting;
                xamlMember.SetIsReadOnly();
                break;
            case "DevExpress.UI.Xaml.Grid.ColumnBase.AllowMoving":
                userType = (global::WS.CFS.WS_CFS_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Grid.ColumnBase");
                xamlMember = new global::WS.CFS.WS_CFS_XamlTypeInfo.XamlMember(this, "AllowMoving", "DevExpress.Utils.DefaultBoolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_86_ColumnBase_AllowMoving;
                xamlMember.Setter = set_86_ColumnBase_AllowMoving;
                break;
            case "DevExpress.UI.Xaml.Grid.ColumnBase.ActualAllowMoving":
                userType = (global::WS.CFS.WS_CFS_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Grid.ColumnBase");
                xamlMember = new global::WS.CFS.WS_CFS_XamlTypeInfo.XamlMember(this, "ActualAllowMoving", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_87_ColumnBase_ActualAllowMoving;
                xamlMember.SetIsReadOnly();
                break;
            case "DevExpress.UI.Xaml.Grid.ColumnBase.ColumnPosition":
                userType = (global::WS.CFS.WS_CFS_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Grid.ColumnBase");
                xamlMember = new global::WS.CFS.WS_CFS_XamlTypeInfo.XamlMember(this, "ColumnPosition", "DevExpress.UI.Xaml.Grid.ColumnPosition");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_88_ColumnBase_ColumnPosition;
                xamlMember.Setter = set_88_ColumnBase_ColumnPosition;
                break;
            case "DevExpress.UI.Xaml.Grid.ColumnBase.HeaderTemplate":
                userType = (global::WS.CFS.WS_CFS_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Grid.ColumnBase");
                xamlMember = new global::WS.CFS.WS_CFS_XamlTypeInfo.XamlMember(this, "HeaderTemplate", "Windows.UI.Xaml.DataTemplate");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_89_ColumnBase_HeaderTemplate;
                xamlMember.Setter = set_89_ColumnBase_HeaderTemplate;
                break;
            case "DevExpress.UI.Xaml.Grid.ColumnBase.HeaderTemplateSelector":
                userType = (global::WS.CFS.WS_CFS_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Grid.ColumnBase");
                xamlMember = new global::WS.CFS.WS_CFS_XamlTypeInfo.XamlMember(this, "HeaderTemplateSelector", "Windows.UI.Xaml.Controls.DataTemplateSelector");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_90_ColumnBase_HeaderTemplateSelector;
                xamlMember.Setter = set_90_ColumnBase_HeaderTemplateSelector;
                break;
            case "DevExpress.UI.Xaml.Grid.ColumnBase.ActualHeaderTemplateSelector":
                userType = (global::WS.CFS.WS_CFS_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Grid.ColumnBase");
                xamlMember = new global::WS.CFS.WS_CFS_XamlTypeInfo.XamlMember(this, "ActualHeaderTemplateSelector", "Windows.UI.Xaml.Controls.DataTemplateSelector");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_91_ColumnBase_ActualHeaderTemplateSelector;
                xamlMember.SetIsReadOnly();
                break;
            case "DevExpress.UI.Xaml.Grid.ColumnBase.HasTotalSummaries":
                userType = (global::WS.CFS.WS_CFS_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Grid.ColumnBase");
                xamlMember = new global::WS.CFS.WS_CFS_XamlTypeInfo.XamlMember(this, "HasTotalSummaries", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_92_ColumnBase_HasTotalSummaries;
                xamlMember.SetIsReadOnly();
                break;
            case "DevExpress.UI.Xaml.Grid.ColumnBase.TotalSummaryText":
                userType = (global::WS.CFS.WS_CFS_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Grid.ColumnBase");
                xamlMember = new global::WS.CFS.WS_CFS_XamlTypeInfo.XamlMember(this, "TotalSummaryText", "String");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_93_ColumnBase_TotalSummaryText;
                xamlMember.SetIsReadOnly();
                break;
            case "DevExpress.UI.Xaml.Grid.ColumnBase.AllowColumnFiltering":
                userType = (global::WS.CFS.WS_CFS_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Grid.ColumnBase");
                xamlMember = new global::WS.CFS.WS_CFS_XamlTypeInfo.XamlMember(this, "AllowColumnFiltering", "DevExpress.Utils.DefaultBoolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_94_ColumnBase_AllowColumnFiltering;
                xamlMember.Setter = set_94_ColumnBase_AllowColumnFiltering;
                break;
            case "DevExpress.UI.Xaml.Grid.ColumnBase.FilterPopupMode":
                userType = (global::WS.CFS.WS_CFS_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Grid.ColumnBase");
                xamlMember = new global::WS.CFS.WS_CFS_XamlTypeInfo.XamlMember(this, "FilterPopupMode", "DevExpress.UI.Xaml.Grid.FilterPopupMode");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_95_ColumnBase_FilterPopupMode;
                xamlMember.Setter = set_95_ColumnBase_FilterPopupMode;
                break;
            case "DevExpress.UI.Xaml.Grid.ColumnBase.ImmediateUpdateColumnFilter":
                userType = (global::WS.CFS.WS_CFS_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Grid.ColumnBase");
                xamlMember = new global::WS.CFS.WS_CFS_XamlTypeInfo.XamlMember(this, "ImmediateUpdateColumnFilter", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_96_ColumnBase_ImmediateUpdateColumnFilter;
                xamlMember.Setter = set_96_ColumnBase_ImmediateUpdateColumnFilter;
                break;
            case "DevExpress.UI.Xaml.Grid.ColumnBase.CustomColumnFilterPopupTemplate":
                userType = (global::WS.CFS.WS_CFS_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Grid.ColumnBase");
                xamlMember = new global::WS.CFS.WS_CFS_XamlTypeInfo.XamlMember(this, "CustomColumnFilterPopupTemplate", "Windows.UI.Xaml.DataTemplate");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_97_ColumnBase_CustomColumnFilterPopupTemplate;
                xamlMember.Setter = set_97_ColumnBase_CustomColumnFilterPopupTemplate;
                break;
            case "DevExpress.UI.Xaml.Grid.ColumnBase.HeaderPresenterType":
                userType = (global::WS.CFS.WS_CFS_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Grid.ColumnBase");
                xamlMember = new global::WS.CFS.WS_CFS_XamlTypeInfo.XamlMember(this, "HeaderPresenterType", "DevExpress.UI.Xaml.Grid.HeaderPresenterType");
                xamlMember.SetTargetTypeName("Windows.UI.Xaml.DependencyObject");
                xamlMember.SetIsDependencyProperty();
                xamlMember.SetIsAttachable();
                xamlMember.Getter = get_98_ColumnBase_HeaderPresenterType;
                xamlMember.Setter = set_98_ColumnBase_HeaderPresenterType;
                break;
            case "DevExpress.UI.Xaml.Grid.GridControl.TotalSummary":
                userType = (global::WS.CFS.WS_CFS_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Grid.GridControl");
                xamlMember = new global::WS.CFS.WS_CFS_XamlTypeInfo.XamlMember(this, "TotalSummary", "DevExpress.UI.Xaml.Grid.GridSummaryItemCollection");
                xamlMember.Getter = get_99_GridControl_TotalSummary;
                xamlMember.SetIsReadOnly();
                break;
            case "DevExpress.UI.Xaml.Grid.GridControlBase.CurrentColumn":
                userType = (global::WS.CFS.WS_CFS_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Grid.GridControlBase");
                xamlMember = new global::WS.CFS.WS_CFS_XamlTypeInfo.XamlMember(this, "CurrentColumn", "DevExpress.UI.Xaml.Grid.GridColumnBase");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_100_GridControlBase_CurrentColumn;
                xamlMember.Setter = set_100_GridControlBase_CurrentColumn;
                break;
            case "DevExpress.UI.Xaml.Grid.GridControlBase.AllowGrouping":
                userType = (global::WS.CFS.WS_CFS_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Grid.GridControlBase");
                xamlMember = new global::WS.CFS.WS_CFS_XamlTypeInfo.XamlMember(this, "AllowGrouping", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_101_GridControlBase_AllowGrouping;
                xamlMember.Setter = set_101_GridControlBase_AllowGrouping;
                break;
            case "DevExpress.UI.Xaml.Grid.GridControlBase.VisibleColumns":
                userType = (global::WS.CFS.WS_CFS_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Grid.GridControlBase");
                xamlMember = new global::WS.CFS.WS_CFS_XamlTypeInfo.XamlMember(this, "VisibleColumns", "System.Collections.Generic.IList`1<DevExpress.UI.Xaml.Grid.GridColumnBase>");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_102_GridControlBase_VisibleColumns;
                xamlMember.SetIsReadOnly();
                break;
            case "DevExpress.UI.Xaml.Grid.GridControlBase.ShowGroupPanel":
                userType = (global::WS.CFS.WS_CFS_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Grid.GridControlBase");
                xamlMember = new global::WS.CFS.WS_CFS_XamlTypeInfo.XamlMember(this, "ShowGroupPanel", "DevExpress.Utils.DefaultBoolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_103_GridControlBase_ShowGroupPanel;
                xamlMember.Setter = set_103_GridControlBase_ShowGroupPanel;
                break;
            case "DevExpress.UI.Xaml.Grid.GridControlBase.ShowGroupedColumns":
                userType = (global::WS.CFS.WS_CFS_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Grid.GridControlBase");
                xamlMember = new global::WS.CFS.WS_CFS_XamlTypeInfo.XamlMember(this, "ShowGroupedColumns", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_104_GridControlBase_ShowGroupedColumns;
                xamlMember.Setter = set_104_GridControlBase_ShowGroupedColumns;
                break;
            case "DevExpress.UI.Xaml.Grid.GridControlBase.GroupSummaryContentStyle":
                userType = (global::WS.CFS.WS_CFS_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Grid.GridControlBase");
                xamlMember = new global::WS.CFS.WS_CFS_XamlTypeInfo.XamlMember(this, "GroupSummaryContentStyle", "Windows.UI.Xaml.Style");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_105_GridControlBase_GroupSummaryContentStyle;
                xamlMember.Setter = set_105_GridControlBase_GroupSummaryContentStyle;
                break;
            case "DevExpress.UI.Xaml.Grid.GridControlBase.GroupSummaryItemTemplate":
                userType = (global::WS.CFS.WS_CFS_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Grid.GridControlBase");
                xamlMember = new global::WS.CFS.WS_CFS_XamlTypeInfo.XamlMember(this, "GroupSummaryItemTemplate", "Windows.UI.Xaml.DataTemplate");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_106_GridControlBase_GroupSummaryItemTemplate;
                xamlMember.Setter = set_106_GridControlBase_GroupSummaryItemTemplate;
                break;
            case "DevExpress.UI.Xaml.Grid.GridControlBase.GroupValueTemplate":
                userType = (global::WS.CFS.WS_CFS_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Grid.GridControlBase");
                xamlMember = new global::WS.CFS.WS_CFS_XamlTypeInfo.XamlMember(this, "GroupValueTemplate", "Windows.UI.Xaml.DataTemplate");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_107_GridControlBase_GroupValueTemplate;
                xamlMember.Setter = set_107_GridControlBase_GroupValueTemplate;
                break;
            case "DevExpress.UI.Xaml.Grid.GridControlBase.GroupValueTemplateSelector":
                userType = (global::WS.CFS.WS_CFS_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Grid.GridControlBase");
                xamlMember = new global::WS.CFS.WS_CFS_XamlTypeInfo.XamlMember(this, "GroupValueTemplateSelector", "Windows.UI.Xaml.Controls.DataTemplateSelector");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_108_GridControlBase_GroupValueTemplateSelector;
                xamlMember.Setter = set_108_GridControlBase_GroupValueTemplateSelector;
                break;
            case "DevExpress.UI.Xaml.Grid.DataControlBase.VirtualizingCacheHeight":
                userType = (global::WS.CFS.WS_CFS_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Grid.DataControlBase");
                xamlMember = new global::WS.CFS.WS_CFS_XamlTypeInfo.XamlMember(this, "VirtualizingCacheHeight", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_109_DataControlBase_VirtualizingCacheHeight;
                xamlMember.Setter = set_109_DataControlBase_VirtualizingCacheHeight;
                break;
            case "DevExpress.UI.Xaml.Grid.DataControlBase.VirtualizingCacheWidth":
                userType = (global::WS.CFS.WS_CFS_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Grid.DataControlBase");
                xamlMember = new global::WS.CFS.WS_CFS_XamlTypeInfo.XamlMember(this, "VirtualizingCacheWidth", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_110_DataControlBase_VirtualizingCacheWidth;
                xamlMember.Setter = set_110_DataControlBase_VirtualizingCacheWidth;
                break;
            case "DevExpress.UI.Xaml.Grid.DataControlBase.ItemsSource":
                userType = (global::WS.CFS.WS_CFS_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Grid.DataControlBase");
                xamlMember = new global::WS.CFS.WS_CFS_XamlTypeInfo.XamlMember(this, "ItemsSource", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_111_DataControlBase_ItemsSource;
                xamlMember.Setter = set_111_DataControlBase_ItemsSource;
                break;
            case "DevExpress.UI.Xaml.Grid.DataControlBase.VisibleRowCount":
                userType = (global::WS.CFS.WS_CFS_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Grid.DataControlBase");
                xamlMember = new global::WS.CFS.WS_CFS_XamlTypeInfo.XamlMember(this, "VisibleRowCount", "Int32");
                xamlMember.Getter = get_112_DataControlBase_VisibleRowCount;
                xamlMember.SetIsReadOnly();
                break;
            case "DevExpress.UI.Xaml.Grid.DataControlBase.ActiveEditor":
                userType = (global::WS.CFS.WS_CFS_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Grid.DataControlBase");
                xamlMember = new global::WS.CFS.WS_CFS_XamlTypeInfo.XamlMember(this, "ActiveEditor", "Windows.UI.Xaml.Controls.Control");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_113_DataControlBase_ActiveEditor;
                xamlMember.SetIsReadOnly();
                break;
            case "DevExpress.UI.Xaml.Grid.DataControlBase.ShowFilterPanelMode":
                userType = (global::WS.CFS.WS_CFS_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Grid.DataControlBase");
                xamlMember = new global::WS.CFS.WS_CFS_XamlTypeInfo.XamlMember(this, "ShowFilterPanelMode", "DevExpress.UI.Xaml.Grid.ShowFilterPanelMode");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_114_DataControlBase_ShowFilterPanelMode;
                xamlMember.Setter = set_114_DataControlBase_ShowFilterPanelMode;
                break;
            case "DevExpress.UI.Xaml.Grid.DataControlBase.ActualShowFilterPanel":
                userType = (global::WS.CFS.WS_CFS_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Grid.DataControlBase");
                xamlMember = new global::WS.CFS.WS_CFS_XamlTypeInfo.XamlMember(this, "ActualShowFilterPanel", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_115_DataControlBase_ActualShowFilterPanel;
                xamlMember.SetIsReadOnly();
                break;
            case "DevExpress.UI.Xaml.Grid.DataControlBase.FilterPanelText":
                userType = (global::WS.CFS.WS_CFS_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Grid.DataControlBase");
                xamlMember = new global::WS.CFS.WS_CFS_XamlTypeInfo.XamlMember(this, "FilterPanelText", "String");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_116_DataControlBase_FilterPanelText;
                xamlMember.SetIsReadOnly();
                break;
            case "DevExpress.UI.Xaml.Grid.DataControlBase.AllowEditing":
                userType = (global::WS.CFS.WS_CFS_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Grid.DataControlBase");
                xamlMember = new global::WS.CFS.WS_CFS_XamlTypeInfo.XamlMember(this, "AllowEditing", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_117_DataControlBase_AllowEditing;
                xamlMember.Setter = set_117_DataControlBase_AllowEditing;
                break;
            case "DevExpress.UI.Xaml.Grid.DataControlBase.AllowColumnMoving":
                userType = (global::WS.CFS.WS_CFS_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Grid.DataControlBase");
                xamlMember = new global::WS.CFS.WS_CFS_XamlTypeInfo.XamlMember(this, "AllowColumnMoving", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_118_DataControlBase_AllowColumnMoving;
                xamlMember.Setter = set_118_DataControlBase_AllowColumnMoving;
                break;
            case "DevExpress.UI.Xaml.Grid.DataControlBase.AllowColumnFiltering":
                userType = (global::WS.CFS.WS_CFS_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Grid.DataControlBase");
                xamlMember = new global::WS.CFS.WS_CFS_XamlTypeInfo.XamlMember(this, "AllowColumnFiltering", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_119_DataControlBase_AllowColumnFiltering;
                xamlMember.Setter = set_119_DataControlBase_AllowColumnFiltering;
                break;
            case "DevExpress.UI.Xaml.Grid.DataControlBase.IsFilterEnabled":
                userType = (global::WS.CFS.WS_CFS_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Grid.DataControlBase");
                xamlMember = new global::WS.CFS.WS_CFS_XamlTypeInfo.XamlMember(this, "IsFilterEnabled", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_120_DataControlBase_IsFilterEnabled;
                xamlMember.Setter = set_120_DataControlBase_IsFilterEnabled;
                break;
            case "DevExpress.UI.Xaml.Grid.DataControlBase.FilterCriteria":
                userType = (global::WS.CFS.WS_CFS_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Grid.DataControlBase");
                xamlMember = new global::WS.CFS.WS_CFS_XamlTypeInfo.XamlMember(this, "FilterCriteria", "DevExpress.Data.Filtering.CriteriaOperator");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_121_DataControlBase_FilterCriteria;
                xamlMember.Setter = set_121_DataControlBase_FilterCriteria;
                break;
            case "DevExpress.UI.Xaml.Grid.DataControlBase.FilterString":
                userType = (global::WS.CFS.WS_CFS_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Grid.DataControlBase");
                xamlMember = new global::WS.CFS.WS_CFS_XamlTypeInfo.XamlMember(this, "FilterString", "String");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_122_DataControlBase_FilterString;
                xamlMember.Setter = set_122_DataControlBase_FilterString;
                break;
            case "DevExpress.UI.Xaml.Grid.DataControlBase.FixedTotalSummaryItemTemplate":
                userType = (global::WS.CFS.WS_CFS_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Grid.DataControlBase");
                xamlMember = new global::WS.CFS.WS_CFS_XamlTypeInfo.XamlMember(this, "FixedTotalSummaryItemTemplate", "Windows.UI.Xaml.DataTemplate");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_123_DataControlBase_FixedTotalSummaryItemTemplate;
                xamlMember.Setter = set_123_DataControlBase_FixedTotalSummaryItemTemplate;
                break;
            case "DevExpress.UI.Xaml.Grid.DataControlBase.AllowSorting":
                userType = (global::WS.CFS.WS_CFS_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Grid.DataControlBase");
                xamlMember = new global::WS.CFS.WS_CFS_XamlTypeInfo.XamlMember(this, "AllowSorting", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_124_DataControlBase_AllowSorting;
                xamlMember.Setter = set_124_DataControlBase_AllowSorting;
                break;
            case "DevExpress.UI.Xaml.Grid.DataControlBase.SelectedItemHandle":
                userType = (global::WS.CFS.WS_CFS_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Grid.DataControlBase");
                xamlMember = new global::WS.CFS.WS_CFS_XamlTypeInfo.XamlMember(this, "SelectedItemHandle", "Int32");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_125_DataControlBase_SelectedItemHandle;
                xamlMember.Setter = set_125_DataControlBase_SelectedItemHandle;
                break;
            case "DevExpress.UI.Xaml.Grid.DataControlBase.NavigationStyle":
                userType = (global::WS.CFS.WS_CFS_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Grid.DataControlBase");
                xamlMember = new global::WS.CFS.WS_CFS_XamlTypeInfo.XamlMember(this, "NavigationStyle", "DevExpress.UI.Xaml.Grid.GridControlNavigationStyle");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_126_DataControlBase_NavigationStyle;
                xamlMember.Setter = set_126_DataControlBase_NavigationStyle;
                break;
            case "DevExpress.UI.Xaml.Grid.DataControlBase.SelectedItem":
                userType = (global::WS.CFS.WS_CFS_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Grid.DataControlBase");
                xamlMember = new global::WS.CFS.WS_CFS_XamlTypeInfo.XamlMember(this, "SelectedItem", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_127_DataControlBase_SelectedItem;
                xamlMember.Setter = set_127_DataControlBase_SelectedItem;
                break;
            case "DevExpress.UI.Xaml.Grid.DataControlBase.CurrentItem":
                userType = (global::WS.CFS.WS_CFS_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Grid.DataControlBase");
                xamlMember = new global::WS.CFS.WS_CFS_XamlTypeInfo.XamlMember(this, "CurrentItem", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_128_DataControlBase_CurrentItem;
                xamlMember.Setter = set_128_DataControlBase_CurrentItem;
                break;
            case "DevExpress.UI.Xaml.Grid.DataControlBase.KeepFocusedRowOnUpdate":
                userType = (global::WS.CFS.WS_CFS_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Grid.DataControlBase");
                xamlMember = new global::WS.CFS.WS_CFS_XamlTypeInfo.XamlMember(this, "KeepFocusedRowOnUpdate", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_129_DataControlBase_KeepFocusedRowOnUpdate;
                xamlMember.Setter = set_129_DataControlBase_KeepFocusedRowOnUpdate;
                break;
            case "DevExpress.UI.Xaml.Grid.DataControlBase.IsSynchronizedWithCurrentItem":
                userType = (global::WS.CFS.WS_CFS_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Grid.DataControlBase");
                xamlMember = new global::WS.CFS.WS_CFS_XamlTypeInfo.XamlMember(this, "IsSynchronizedWithCurrentItem", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_130_DataControlBase_IsSynchronizedWithCurrentItem;
                xamlMember.Setter = set_130_DataControlBase_IsSynchronizedWithCurrentItem;
                break;
            case "DevExpress.UI.Xaml.Grid.DataControlBase.FocusedBorderTemplate":
                userType = (global::WS.CFS.WS_CFS_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Grid.DataControlBase");
                xamlMember = new global::WS.CFS.WS_CFS_XamlTypeInfo.XamlMember(this, "FocusedBorderTemplate", "Windows.UI.Xaml.Controls.ControlTemplate");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_131_DataControlBase_FocusedBorderTemplate;
                xamlMember.Setter = set_131_DataControlBase_FocusedBorderTemplate;
                break;
            case "DevExpress.UI.Xaml.Grid.DataControlBase.AutoScrollOnSorting":
                userType = (global::WS.CFS.WS_CFS_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Grid.DataControlBase");
                xamlMember = new global::WS.CFS.WS_CFS_XamlTypeInfo.XamlMember(this, "AutoScrollOnSorting", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_132_DataControlBase_AutoScrollOnSorting;
                xamlMember.Setter = set_132_DataControlBase_AutoScrollOnSorting;
                break;
            case "DevExpress.UI.Xaml.Grid.DataControlBase.ShowTotalSummary":
                userType = (global::WS.CFS.WS_CFS_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Grid.DataControlBase");
                xamlMember = new global::WS.CFS.WS_CFS_XamlTypeInfo.XamlMember(this, "ShowTotalSummary", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_133_DataControlBase_ShowTotalSummary;
                xamlMember.Setter = set_133_DataControlBase_ShowTotalSummary;
                break;
            case "DevExpress.UI.Xaml.Grid.DataControlBase.ShowColumnHeaders":
                userType = (global::WS.CFS.WS_CFS_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Grid.DataControlBase");
                xamlMember = new global::WS.CFS.WS_CFS_XamlTypeInfo.XamlMember(this, "ShowColumnHeaders", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_134_DataControlBase_ShowColumnHeaders;
                xamlMember.Setter = set_134_DataControlBase_ShowColumnHeaders;
                break;
            case "DevExpress.UI.Xaml.Grid.DataControlBase.TotalSummaryContentStyle":
                userType = (global::WS.CFS.WS_CFS_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Grid.DataControlBase");
                xamlMember = new global::WS.CFS.WS_CFS_XamlTypeInfo.XamlMember(this, "TotalSummaryContentStyle", "Windows.UI.Xaml.Style");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_135_DataControlBase_TotalSummaryContentStyle;
                xamlMember.Setter = set_135_DataControlBase_TotalSummaryContentStyle;
                break;
            case "DevExpress.UI.Xaml.Grid.DataControlBase.ColumnHeaderStyle":
                userType = (global::WS.CFS.WS_CFS_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Grid.DataControlBase");
                xamlMember = new global::WS.CFS.WS_CFS_XamlTypeInfo.XamlMember(this, "ColumnHeaderStyle", "Windows.UI.Xaml.Style");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_136_DataControlBase_ColumnHeaderStyle;
                xamlMember.Setter = set_136_DataControlBase_ColumnHeaderStyle;
                break;
            case "DevExpress.UI.Xaml.Grid.DataControlBase.CellStyle":
                userType = (global::WS.CFS.WS_CFS_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Grid.DataControlBase");
                xamlMember = new global::WS.CFS.WS_CFS_XamlTypeInfo.XamlMember(this, "CellStyle", "Windows.UI.Xaml.Style");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_137_DataControlBase_CellStyle;
                xamlMember.Setter = set_137_DataControlBase_CellStyle;
                break;
            case "DevExpress.UI.Xaml.Grid.DataControlBase.TotalSummaryItemTemplate":
                userType = (global::WS.CFS.WS_CFS_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Grid.DataControlBase");
                xamlMember = new global::WS.CFS.WS_CFS_XamlTypeInfo.XamlMember(this, "TotalSummaryItemTemplate", "Windows.UI.Xaml.DataTemplate");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_138_DataControlBase_TotalSummaryItemTemplate;
                xamlMember.Setter = set_138_DataControlBase_TotalSummaryItemTemplate;
                break;
            case "DevExpress.UI.Xaml.Grid.DataControlBase.ColumnHeaderTemplate":
                userType = (global::WS.CFS.WS_CFS_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Grid.DataControlBase");
                xamlMember = new global::WS.CFS.WS_CFS_XamlTypeInfo.XamlMember(this, "ColumnHeaderTemplate", "Windows.UI.Xaml.DataTemplate");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_139_DataControlBase_ColumnHeaderTemplate;
                xamlMember.Setter = set_139_DataControlBase_ColumnHeaderTemplate;
                break;
            case "DevExpress.UI.Xaml.Grid.DataControlBase.ColumnHeaderTemplateSelector":
                userType = (global::WS.CFS.WS_CFS_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Grid.DataControlBase");
                xamlMember = new global::WS.CFS.WS_CFS_XamlTypeInfo.XamlMember(this, "ColumnHeaderTemplateSelector", "Windows.UI.Xaml.Controls.DataTemplateSelector");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_140_DataControlBase_ColumnHeaderTemplateSelector;
                xamlMember.Setter = set_140_DataControlBase_ColumnHeaderTemplateSelector;
                break;
            case "DevExpress.UI.Xaml.Grid.DataControlBase.Commands":
                userType = (global::WS.CFS.WS_CFS_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Grid.DataControlBase");
                xamlMember = new global::WS.CFS.WS_CFS_XamlTypeInfo.XamlMember(this, "Commands", "DevExpress.UI.Xaml.Grid.DataControlCommandsBase");
                xamlMember.Getter = get_141_DataControlBase_Commands;
                xamlMember.SetIsReadOnly();
                break;
            case "DevExpress.UI.Xaml.Grid.DataControlBase.SummariesIgnoreNullValues":
                userType = (global::WS.CFS.WS_CFS_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Grid.DataControlBase");
                xamlMember = new global::WS.CFS.WS_CFS_XamlTypeInfo.XamlMember(this, "SummariesIgnoreNullValues", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_142_DataControlBase_SummariesIgnoreNullValues;
                xamlMember.Setter = set_142_DataControlBase_SummariesIgnoreNullValues;
                break;
            case "DevExpress.UI.Xaml.Grid.DataControlBase.ShowFixedTotalSummary":
                userType = (global::WS.CFS.WS_CFS_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Grid.DataControlBase");
                xamlMember = new global::WS.CFS.WS_CFS_XamlTypeInfo.XamlMember(this, "ShowFixedTotalSummary", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_143_DataControlBase_ShowFixedTotalSummary;
                xamlMember.Setter = set_143_DataControlBase_ShowFixedTotalSummary;
                break;
            case "DevExpress.UI.Xaml.Grid.DataControlBase.PreserveSorting":
                userType = (global::WS.CFS.WS_CFS_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Grid.DataControlBase");
                xamlMember = new global::WS.CFS.WS_CFS_XamlTypeInfo.XamlMember(this, "PreserveSorting", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_144_DataControlBase_PreserveSorting;
                xamlMember.Setter = set_144_DataControlBase_PreserveSorting;
                break;
            case "DevExpress.UI.Xaml.Grid.DataControlBase.SelectionMode":
                userType = (global::WS.CFS.WS_CFS_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Grid.DataControlBase");
                xamlMember = new global::WS.CFS.WS_CFS_XamlTypeInfo.XamlMember(this, "SelectionMode", "DevExpress.UI.Xaml.Grid.MultiSelectMode");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_145_DataControlBase_SelectionMode;
                xamlMember.Setter = set_145_DataControlBase_SelectionMode;
                break;
            case "DevExpress.UI.Xaml.Grid.DataControlBase.SelectedItems":
                userType = (global::WS.CFS.WS_CFS_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Grid.DataControlBase");
                xamlMember = new global::WS.CFS.WS_CFS_XamlTypeInfo.XamlMember(this, "SelectedItems", "System.Collections.IList");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_146_DataControlBase_SelectedItems;
                xamlMember.Setter = set_146_DataControlBase_SelectedItems;
                break;
            case "DevExpress.UI.Xaml.Grid.DataControlBase.ItemNavigationTargetType":
                userType = (global::WS.CFS.WS_CFS_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Grid.DataControlBase");
                xamlMember = new global::WS.CFS.WS_CFS_XamlTypeInfo.XamlMember(this, "ItemNavigationTargetType", "String");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_147_DataControlBase_ItemNavigationTargetType;
                xamlMember.Setter = set_147_DataControlBase_ItemNavigationTargetType;
                break;
            case "DevExpress.UI.Xaml.Grid.DataControlBase.ItemNavigationMode":
                userType = (global::WS.CFS.WS_CFS_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Grid.DataControlBase");
                xamlMember = new global::WS.CFS.WS_CFS_XamlTypeInfo.XamlMember(this, "ItemNavigationMode", "DevExpress.UI.Xaml.Grid.ItemNavigationMode");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_148_DataControlBase_ItemNavigationMode;
                xamlMember.Setter = set_148_DataControlBase_ItemNavigationMode;
                break;
            case "DevExpress.UI.Xaml.Grid.DataControlBase.ItemClickCommand":
                userType = (global::WS.CFS.WS_CFS_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Grid.DataControlBase");
                xamlMember = new global::WS.CFS.WS_CFS_XamlTypeInfo.XamlMember(this, "ItemClickCommand", "System.Windows.Input.ICommand");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_149_DataControlBase_ItemClickCommand;
                xamlMember.Setter = set_149_DataControlBase_ItemClickCommand;
                break;
            case "DevExpress.UI.Xaml.Grid.DataControlBase.ItemNavigationTargetParameterBinding":
                userType = (global::WS.CFS.WS_CFS_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Grid.DataControlBase");
                xamlMember = new global::WS.CFS.WS_CFS_XamlTypeInfo.XamlMember(this, "ItemNavigationTargetParameterBinding", "Windows.UI.Xaml.Data.BindingBase");
                xamlMember.Getter = get_150_DataControlBase_ItemNavigationTargetParameterBinding;
                xamlMember.Setter = set_150_DataControlBase_ItemNavigationTargetParameterBinding;
                break;
            case "DevExpress.UI.Xaml.Grid.DataControlBase.FixedSummariesLeft":
                userType = (global::WS.CFS.WS_CFS_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Grid.DataControlBase");
                xamlMember = new global::WS.CFS.WS_CFS_XamlTypeInfo.XamlMember(this, "FixedSummariesLeft", "System.Collections.Generic.IList`1<DevExpress.UI.Xaml.Grid.GridTotalSummaryData>");
                xamlMember.Getter = get_151_DataControlBase_FixedSummariesLeft;
                xamlMember.SetIsReadOnly();
                break;
            case "DevExpress.UI.Xaml.Grid.GridTotalSummaryData.Item":
                userType = (global::WS.CFS.WS_CFS_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Grid.GridTotalSummaryData");
                xamlMember = new global::WS.CFS.WS_CFS_XamlTypeInfo.XamlMember(this, "Item", "DevExpress.UI.Xaml.Grid.SummaryItemBase");
                xamlMember.Getter = get_152_GridTotalSummaryData_Item;
                xamlMember.SetIsReadOnly();
                break;
            case "DevExpress.UI.Xaml.Grid.GridTotalSummaryData.Value":
                userType = (global::WS.CFS.WS_CFS_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Grid.GridTotalSummaryData");
                xamlMember = new global::WS.CFS.WS_CFS_XamlTypeInfo.XamlMember(this, "Value", "Object");
                xamlMember.Getter = get_153_GridTotalSummaryData_Value;
                xamlMember.SetIsReadOnly();
                break;
            case "DevExpress.UI.Xaml.Grid.GridTotalSummaryData.DisplayValue":
                userType = (global::WS.CFS.WS_CFS_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Grid.GridTotalSummaryData");
                xamlMember = new global::WS.CFS.WS_CFS_XamlTypeInfo.XamlMember(this, "DisplayValue", "Object");
                xamlMember.Getter = get_154_GridTotalSummaryData_DisplayValue;
                xamlMember.SetIsReadOnly();
                break;
            case "DevExpress.UI.Xaml.Grid.GridTotalSummaryData.Caption":
                userType = (global::WS.CFS.WS_CFS_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Grid.GridTotalSummaryData");
                xamlMember = new global::WS.CFS.WS_CFS_XamlTypeInfo.XamlMember(this, "Caption", "String");
                xamlMember.Getter = get_155_GridTotalSummaryData_Caption;
                xamlMember.SetIsReadOnly();
                break;
            case "DevExpress.UI.Xaml.Grid.GridTotalSummaryData.Column":
                userType = (global::WS.CFS.WS_CFS_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Grid.GridTotalSummaryData");
                xamlMember = new global::WS.CFS.WS_CFS_XamlTypeInfo.XamlMember(this, "Column", "DevExpress.UI.Xaml.Grid.ColumnBase");
                xamlMember.Getter = get_156_GridTotalSummaryData_Column;
                xamlMember.SetIsReadOnly();
                break;
            case "DevExpress.UI.Xaml.Grid.GridTotalSummaryData.FixedTotalSummaryItemTemplate":
                userType = (global::WS.CFS.WS_CFS_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Grid.GridTotalSummaryData");
                xamlMember = new global::WS.CFS.WS_CFS_XamlTypeInfo.XamlMember(this, "FixedTotalSummaryItemTemplate", "Windows.UI.Xaml.DataTemplate");
                xamlMember.Getter = get_157_GridTotalSummaryData_FixedTotalSummaryItemTemplate;
                xamlMember.SetIsReadOnly();
                break;
            case "DevExpress.UI.Xaml.Grid.GridTotalSummaryData.DataControl":
                userType = (global::WS.CFS.WS_CFS_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Grid.GridTotalSummaryData");
                xamlMember = new global::WS.CFS.WS_CFS_XamlTypeInfo.XamlMember(this, "DataControl", "DevExpress.UI.Xaml.Grid.DataControlBase");
                xamlMember.Getter = get_158_GridTotalSummaryData_DataControl;
                xamlMember.SetIsReadOnly();
                break;
            case "DevExpress.UI.Xaml.Grid.DataControlBase.FixedSummariesRight":
                userType = (global::WS.CFS.WS_CFS_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Grid.DataControlBase");
                xamlMember = new global::WS.CFS.WS_CFS_XamlTypeInfo.XamlMember(this, "FixedSummariesRight", "System.Collections.Generic.IList`1<DevExpress.UI.Xaml.Grid.GridTotalSummaryData>");
                xamlMember.Getter = get_159_DataControlBase_FixedSummariesRight;
                xamlMember.SetIsReadOnly();
                break;
            case "DevExpress.UI.Xaml.Grid.DataControlBase.HeadersData":
                userType = (global::WS.CFS.WS_CFS_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Grid.DataControlBase");
                xamlMember = new global::WS.CFS.WS_CFS_XamlTypeInfo.XamlMember(this, "HeadersData", "DevExpress.UI.Xaml.Grid.HeadersData");
                xamlMember.Getter = get_160_DataControlBase_HeadersData;
                xamlMember.SetIsReadOnly();
                break;
            case "DevExpress.UI.Xaml.Grid.DataControlBase.TotalSummaryData":
                userType = (global::WS.CFS.WS_CFS_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Grid.DataControlBase");
                xamlMember = new global::WS.CFS.WS_CFS_XamlTypeInfo.XamlMember(this, "TotalSummaryData", "DevExpress.UI.Xaml.Grid.TotalSummaryData");
                xamlMember.Getter = get_161_DataControlBase_TotalSummaryData;
                xamlMember.SetIsReadOnly();
                break;
            case "DevExpress.Core.Native.DXControl.Focusable":
                userType = (global::WS.CFS.WS_CFS_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.Core.Native.DXControl");
                xamlMember = new global::WS.CFS.WS_CFS_XamlTypeInfo.XamlMember(this, "Focusable", "Boolean");
                xamlMember.Getter = get_162_DXControl_Focusable;
                xamlMember.Setter = set_162_DXControl_Focusable;
                break;
            case "DevExpress.Core.Native.DXControl.IsFocused":
                userType = (global::WS.CFS.WS_CFS_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.Core.Native.DXControl");
                xamlMember = new global::WS.CFS.WS_CFS_XamlTypeInfo.XamlMember(this, "IsFocused", "Boolean");
                xamlMember.Getter = get_163_DXControl_IsFocused;
                xamlMember.SetIsReadOnly();
                break;
            case "DevExpress.Core.Native.DXControl.IsKeyboardFocusWithin":
                userType = (global::WS.CFS.WS_CFS_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.Core.Native.DXControl");
                xamlMember = new global::WS.CFS.WS_CFS_XamlTypeInfo.XamlMember(this, "IsKeyboardFocusWithin", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_164_DXControl_IsKeyboardFocusWithin;
                xamlMember.SetIsReadOnly();
                break;
            case "DevExpress.Core.Native.DXControl.IsLoaded":
                userType = (global::WS.CFS.WS_CFS_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.Core.Native.DXControl");
                xamlMember = new global::WS.CFS.WS_CFS_XamlTypeInfo.XamlMember(this, "IsLoaded", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_165_DXControl_IsLoaded;
                xamlMember.SetIsReadOnly();
                break;
            case "DevExpress.Core.Native.DXControl.IsMouseOver":
                userType = (global::WS.CFS.WS_CFS_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.Core.Native.DXControl");
                xamlMember = new global::WS.CFS.WS_CFS_XamlTypeInfo.XamlMember(this, "IsMouseOver", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_166_DXControl_IsMouseOver;
                xamlMember.SetIsReadOnly();
                break;
            case "DevExpress.Core.Native.DXControl.IsTabStop":
                userType = (global::WS.CFS.WS_CFS_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.Core.Native.DXControl");
                xamlMember = new global::WS.CFS.WS_CFS_XamlTypeInfo.XamlMember(this, "IsTabStop", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_167_DXControl_IsTabStop;
                xamlMember.Setter = set_167_DXControl_IsTabStop;
                break;
            case "DevExpress.UI.Xaml.Grid.DataControlBase.CurrentGrid":
                userType = (global::WS.CFS.WS_CFS_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Grid.DataControlBase");
                xamlMember = new global::WS.CFS.WS_CFS_XamlTypeInfo.XamlMember(this, "CurrentGrid", "DevExpress.UI.Xaml.Grid.DataControlBase");
                xamlMember.SetTargetTypeName("Windows.UI.Xaml.DependencyObject");
                xamlMember.SetIsDependencyProperty();
                xamlMember.SetIsAttachable();
                xamlMember.Getter = get_168_DataControlBase_CurrentGrid;
                xamlMember.Setter = set_168_DataControlBase_CurrentGrid;
                break;
            case "DevExpress.UI.Xaml.Grid.DataControlBase.CurrentViewChangedListener":
                userType = (global::WS.CFS.WS_CFS_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DevExpress.UI.Xaml.Grid.DataControlBase");
                xamlMember = new global::WS.CFS.WS_CFS_XamlTypeInfo.XamlMember(this, "CurrentViewChangedListener", "DevExpress.UI.Xaml.Grid.INotifyCurrentViewChanged");
                xamlMember.SetTargetTypeName("Windows.UI.Xaml.DependencyObject");
                xamlMember.SetIsDependencyProperty();
                xamlMember.SetIsAttachable();
                xamlMember.Getter = get_169_DataControlBase_CurrentViewChangedListener;
                xamlMember.Setter = set_169_DataControlBase_CurrentViewChangedListener;
                break;
            case "WS.CFS.FeedbackListPage.DefaultViewModel":
                userType = (global::WS.CFS.WS_CFS_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WS.CFS.FeedbackListPage");
                xamlMember = new global::WS.CFS.WS_CFS_XamlTypeInfo.XamlMember(this, "DefaultViewModel", "WS.CFS.Common.ObservableDictionary");
                xamlMember.Getter = get_170_FeedbackListPage_DefaultViewModel;
                xamlMember.SetIsReadOnly();
                break;
            case "WS.CFS.FeedbackListPage.NavigationHelper":
                userType = (global::WS.CFS.WS_CFS_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WS.CFS.FeedbackListPage");
                xamlMember = new global::WS.CFS.WS_CFS_XamlTypeInfo.XamlMember(this, "NavigationHelper", "WS.CFS.Common.NavigationHelper");
                xamlMember.Getter = get_171_FeedbackListPage_NavigationHelper;
                xamlMember.SetIsReadOnly();
                break;
            case "WS.CFS.GroupedItemsPage1.DefaultViewModel":
                userType = (global::WS.CFS.WS_CFS_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WS.CFS.GroupedItemsPage1");
                xamlMember = new global::WS.CFS.WS_CFS_XamlTypeInfo.XamlMember(this, "DefaultViewModel", "WS.CFS.Common.ObservableDictionary");
                xamlMember.Getter = get_172_GroupedItemsPage1_DefaultViewModel;
                xamlMember.SetIsReadOnly();
                break;
            case "WS.CFS.GroupedItemsPage1.NavigationHelper":
                userType = (global::WS.CFS.WS_CFS_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WS.CFS.GroupedItemsPage1");
                xamlMember = new global::WS.CFS.WS_CFS_XamlTypeInfo.XamlMember(this, "NavigationHelper", "WS.CFS.Common.NavigationHelper");
                xamlMember.Getter = get_173_GroupedItemsPage1_NavigationHelper;
                xamlMember.SetIsReadOnly();
                break;
            case "WS.CFS.ItemDetailPage1.DefaultViewModel":
                userType = (global::WS.CFS.WS_CFS_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WS.CFS.ItemDetailPage1");
                xamlMember = new global::WS.CFS.WS_CFS_XamlTypeInfo.XamlMember(this, "DefaultViewModel", "WS.CFS.Common.ObservableDictionary");
                xamlMember.Getter = get_174_ItemDetailPage1_DefaultViewModel;
                xamlMember.SetIsReadOnly();
                break;
            case "WS.CFS.ItemDetailPage1.NavigationHelper":
                userType = (global::WS.CFS.WS_CFS_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WS.CFS.ItemDetailPage1");
                xamlMember = new global::WS.CFS.WS_CFS_XamlTypeInfo.XamlMember(this, "NavigationHelper", "WS.CFS.Common.NavigationHelper");
                xamlMember.Getter = get_175_ItemDetailPage1_NavigationHelper;
                xamlMember.SetIsReadOnly();
                break;
            case "WS.CFS.MainPage.DefaultViewModel":
                userType = (global::WS.CFS.WS_CFS_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WS.CFS.MainPage");
                xamlMember = new global::WS.CFS.WS_CFS_XamlTypeInfo.XamlMember(this, "DefaultViewModel", "WS.CFS.Common.ObservableDictionary");
                xamlMember.Getter = get_176_MainPage_DefaultViewModel;
                xamlMember.SetIsReadOnly();
                break;
            case "WS.CFS.MainPage.NavigationHelper":
                userType = (global::WS.CFS.WS_CFS_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WS.CFS.MainPage");
                xamlMember = new global::WS.CFS.WS_CFS_XamlTypeInfo.XamlMember(this, "NavigationHelper", "WS.CFS.Common.NavigationHelper");
                xamlMember.Getter = get_177_MainPage_NavigationHelper;
                xamlMember.SetIsReadOnly();
                break;
            }
            return xamlMember;
        }
    }

    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks", "4.0.0.0")]    
    [System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class XamlSystemBaseType : global::Windows.UI.Xaml.Markup.IXamlType
    {
        string _fullName;
        global::System.Type _underlyingType;

        public XamlSystemBaseType(string fullName, global::System.Type underlyingType)
        {
            _fullName = fullName;
            _underlyingType = underlyingType;
        }

        public string FullName { get { return _fullName; } }

        public global::System.Type UnderlyingType
        {
            get
            {
                return _underlyingType;
            }
        }

        virtual public global::Windows.UI.Xaml.Markup.IXamlType BaseType { get { throw new global::System.NotImplementedException(); } }
        virtual public global::Windows.UI.Xaml.Markup.IXamlMember ContentProperty { get { throw new global::System.NotImplementedException(); } }
        virtual public global::Windows.UI.Xaml.Markup.IXamlMember GetMember(string name) { throw new global::System.NotImplementedException(); }
        virtual public bool IsArray { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsCollection { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsConstructible { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsDictionary { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsMarkupExtension { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsBindable { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsReturnTypeStub { get { throw new global::System.NotImplementedException(); } }
        virtual public global::Windows.UI.Xaml.Markup.IXamlType ItemType { get { throw new global::System.NotImplementedException(); } }
        virtual public global::Windows.UI.Xaml.Markup.IXamlType KeyType { get { throw new global::System.NotImplementedException(); } }
        virtual public object ActivateInstance() { throw new global::System.NotImplementedException(); }
        virtual public void AddToMap(object instance, object key, object item)  { throw new global::System.NotImplementedException(); }
        virtual public void AddToVector(object instance, object item)  { throw new global::System.NotImplementedException(); }
        virtual public void RunInitializer()   { throw new global::System.NotImplementedException(); }
        virtual public object CreateFromString(string input)   { throw new global::System.NotImplementedException(); }
    }
    
    internal delegate object Activator();
    internal delegate void AddToCollection(object instance, object item);
    internal delegate void AddToDictionary(object instance, object key, object item);

    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks", "4.0.0.0")]    
    [System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class XamlUserType : global::WS.CFS.WS_CFS_XamlTypeInfo.XamlSystemBaseType
    {
        global::WS.CFS.WS_CFS_XamlTypeInfo.XamlTypeInfoProvider _provider;
        global::Windows.UI.Xaml.Markup.IXamlType _baseType;
        bool _isArray;
        bool _isMarkupExtension;
        bool _isBindable;
        bool _isReturnTypeStub;

        string _contentPropertyName;
        string _itemTypeName;
        string _keyTypeName;
        global::System.Collections.Generic.Dictionary<string, string> _memberNames;
        global::System.Collections.Generic.Dictionary<string, object> _enumValues;

        public XamlUserType(global::WS.CFS.WS_CFS_XamlTypeInfo.XamlTypeInfoProvider provider, string fullName, global::System.Type fullType, global::Windows.UI.Xaml.Markup.IXamlType baseType)
            :base(fullName, fullType)
        {
            _provider = provider;
            _baseType = baseType;
        }

        // --- Interface methods ----

        override public global::Windows.UI.Xaml.Markup.IXamlType BaseType { get { return _baseType; } }
        override public bool IsArray { get { return _isArray; } }
        override public bool IsCollection { get { return (CollectionAdd != null); } }
        override public bool IsConstructible { get { return (Activator != null); } }
        override public bool IsDictionary { get { return (DictionaryAdd != null); } }
        override public bool IsMarkupExtension { get { return _isMarkupExtension; } }
        override public bool IsBindable { get { return _isBindable; } }
        override public bool IsReturnTypeStub { get { return _isReturnTypeStub; } }

        override public global::Windows.UI.Xaml.Markup.IXamlMember ContentProperty
        {
            get { return _provider.GetMemberByLongName(_contentPropertyName); }
        }

        override public global::Windows.UI.Xaml.Markup.IXamlType ItemType
        {
            get { return _provider.GetXamlTypeByName(_itemTypeName); }
        }

        override public global::Windows.UI.Xaml.Markup.IXamlType KeyType
        {
            get { return _provider.GetXamlTypeByName(_keyTypeName); }
        }

        override public global::Windows.UI.Xaml.Markup.IXamlMember GetMember(string name)
        {
            if (_memberNames == null)
            {
                return null;
            }
            string longName;
            if (_memberNames.TryGetValue(name, out longName))
            {
                return _provider.GetMemberByLongName(longName);
            }
            return null;
        }

        override public object ActivateInstance()
        {
            return Activator(); 
        }

        override public void AddToMap(object instance, object key, object item) 
        {
            DictionaryAdd(instance, key, item);
        }

        override public void AddToVector(object instance, object item)
        {
            CollectionAdd(instance, item);
        }

        override public void RunInitializer() 
        {
            System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(UnderlyingType.TypeHandle);
        }

        override public object CreateFromString(string input)
        {
            if (_enumValues != null)
            {
                int value = 0;

                string[] valueParts = input.Split(',');

                foreach (string valuePart in valueParts) 
                {
                    object partValue;
                    int enumFieldValue = 0;
                    try
                    {
                        if (_enumValues.TryGetValue(valuePart.Trim(), out partValue))
                        {
                            enumFieldValue = global::System.Convert.ToInt32(partValue);
                        }
                        else
                        {
                            try
                            {
                                enumFieldValue = global::System.Convert.ToInt32(valuePart.Trim());
                            }
                            catch( global::System.FormatException )
                            {
                                foreach( string key in _enumValues.Keys )
                                {
                                    if( string.Compare(valuePart.Trim(), key, global::System.StringComparison.OrdinalIgnoreCase) == 0 )
                                    {
                                        if( _enumValues.TryGetValue(key.Trim(), out partValue) )
                                        {
                                            enumFieldValue = global::System.Convert.ToInt32(partValue);
                                            break;
                                        }
                                    }
                                }
                            }
                        }
                        value |= enumFieldValue; 
                    }
                    catch( global::System.FormatException )
                    {
                        throw new global::System.ArgumentException(input, FullName);
                    }
                }

                return value; 
            }
            throw new global::System.ArgumentException(input, FullName);
        }

        // --- End of Interface methods

        public Activator Activator { get; set; }
        public AddToCollection CollectionAdd { get; set; }
        public AddToDictionary DictionaryAdd { get; set; }

        public void SetContentPropertyName(string contentPropertyName)
        {
            _contentPropertyName = contentPropertyName;
        }

        public void SetIsArray()
        {
            _isArray = true; 
        }

        public void SetIsMarkupExtension()
        {
            _isMarkupExtension = true;
        }

        public void SetIsBindable()
        {
            _isBindable = true;
        }

        public void SetIsReturnTypeStub()
        {
            _isReturnTypeStub = true;
        }

        public void SetItemTypeName(string itemTypeName)
        {
            _itemTypeName = itemTypeName;
        }

        public void SetKeyTypeName(string keyTypeName)
        {
            _keyTypeName = keyTypeName;
        }

        public void AddMemberName(string shortName)
        {
            if(_memberNames == null)
            {
                _memberNames =  new global::System.Collections.Generic.Dictionary<string,string>();
            }
            _memberNames.Add(shortName, FullName + "." + shortName);
        }

        public void AddEnumValue(string name, object value)
        {
            if (_enumValues == null)
            {
                _enumValues = new global::System.Collections.Generic.Dictionary<string, object>();
            }
            _enumValues.Add(name, value);
        }
    }

    internal delegate object Getter(object instance);
    internal delegate void Setter(object instance, object value);

    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks", "4.0.0.0")]    
    [System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class XamlMember : global::Windows.UI.Xaml.Markup.IXamlMember
    {
        global::WS.CFS.WS_CFS_XamlTypeInfo.XamlTypeInfoProvider _provider;
        string _name;
        bool _isAttachable;
        bool _isDependencyProperty;
        bool _isReadOnly;

        string _typeName;
        string _targetTypeName;

        public XamlMember(global::WS.CFS.WS_CFS_XamlTypeInfo.XamlTypeInfoProvider provider, string name, string typeName)
        {
            _name = name;
            _typeName = typeName;
            _provider = provider;
        }

        public string Name { get { return _name; } }

        public global::Windows.UI.Xaml.Markup.IXamlType Type
        {
            get { return _provider.GetXamlTypeByName(_typeName); }
        }

        public void SetTargetTypeName(string targetTypeName)
        {
            _targetTypeName = targetTypeName;
        }
        public global::Windows.UI.Xaml.Markup.IXamlType TargetType
        {
            get { return _provider.GetXamlTypeByName(_targetTypeName); }
        }

        public void SetIsAttachable() { _isAttachable = true; }
        public bool IsAttachable { get { return _isAttachable; } }

        public void SetIsDependencyProperty() { _isDependencyProperty = true; }
        public bool IsDependencyProperty { get { return _isDependencyProperty; } }

        public void SetIsReadOnly() { _isReadOnly = true; }
        public bool IsReadOnly { get { return _isReadOnly; } }

        public Getter Getter { get; set; }
        public object GetValue(object instance)
        {
            if (Getter != null)
                return Getter(instance);
            else
                throw new global::System.InvalidOperationException("GetValue");
        }

        public Setter Setter { get; set; }
        public void SetValue(object instance, object value)
        {
            if (Setter != null)
                Setter(instance, value);
            else
                throw new global::System.InvalidOperationException("SetValue");
        }
    }
}


